{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport HomeScreen from \"../views/homeScreen\";\nimport IngredientListScreen from \"../views/IngredientListScreen\";\nimport TortasScreen from \"../views/TortasScreen\";\nimport NewIngredientScreen from \"../views/NewIngredientScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar AppNavigator = function AppNavigator() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isExpanded = _useState2[0],\n    setExpanded = _useState2[1];\n  var navigation = useNavigation();\n  var toggleMenu = function toggleMenu() {\n    setExpanded(!isExpanded);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.sidebar,\n      children: _jsx(TouchableOpacity, {\n        style: [styles.menu, isExpanded ? styles.menuExpanded : null],\n        onPress: toggleMenu,\n        activeOpacity: 0.7,\n        children: _jsx(Ionicons, {\n          name: isExpanded ? 'close' : 'menu',\n          size: 30,\n          color: \"black\"\n        })\n      })\n    }), _jsx(View, {\n      style: styles.content,\n      children: _jsxs(Drawer.Navigator, {\n        initialRouteName: \"Home\",\n        drawerStyle: styles.drawerStyle,\n        drawerContentOptions: {\n          labelStyle: styles.drawerLabel\n        },\n        children: [_jsx(Drawer.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Drawer.Screen, {\n          name: \"IngredientStack\",\n          component: IngredientListScreen\n        }), _jsx(Drawer.Screen, {\n          name: \"Tortas\",\n          component: TortasScreen\n        }), _jsx(Drawer.Screen, {\n          name: \"NewIngredient\",\n          component: NewIngredientScreen\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  sidebar: {\n    width: 60,\n    backgroundColor: '#bbe4fc',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 1\n  },\n  menu: {\n    width: 40,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  menuExpanded: {\n    width: 60\n  },\n  content: {\n    flex: 1\n  },\n  drawerStyle: {\n    backgroundColor: '#bbe4fc',\n    width: 250\n  },\n  drawerLabel: {\n    fontFamily: 'Source Sans 3'\n  }\n});\nexport default AppNavigator;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","StyleSheet","Text","useNavigation","Ionicons","createDrawerNavigator","HomeScreen","IngredientListScreen","TortasScreen","NewIngredientScreen","jsx","_jsx","jsxs","_jsxs","Drawer","AppNavigator","_useState","_useState2","_slicedToArray","isExpanded","setExpanded","navigation","toggleMenu","style","styles","container","children","sidebar","menu","menuExpanded","onPress","activeOpacity","name","size","color","content","Navigator","initialRouteName","drawerStyle","drawerContentOptions","labelStyle","drawerLabel","Screen","component","create","flex","flexDirection","width","backgroundColor","alignItems","justifyContent","zIndex","height","fontFamily"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/components/Navigation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport HomeScreen from '../views/homeScreen';\r\nimport IngredientListScreen from '../views/IngredientListScreen';\r\nimport TortasScreen from '../views/TortasScreen';\r\nimport NewIngredientScreen from '../views/NewIngredientScreen';\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst AppNavigator = () => {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const toggleMenu = () => {\r\n    setExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.sidebar}>\r\n        <TouchableOpacity\r\n          style={[styles.menu, isExpanded ? styles.menuExpanded : null]}\r\n          onPress={toggleMenu}\r\n          activeOpacity={0.7}\r\n        >\r\n          <Ionicons name={isExpanded ? 'close' : 'menu'} size={30} color=\"black\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.content}>\r\n        <Drawer.Navigator\r\n          initialRouteName=\"Home\"\r\n          drawerStyle={styles.drawerStyle}\r\n          drawerContentOptions={{\r\n            labelStyle: styles.drawerLabel,\r\n          }}\r\n        >\r\n          <Drawer.Screen name=\"Home\" component={HomeScreen} />\r\n          <Drawer.Screen name=\"IngredientStack\" component={IngredientListScreen} />\r\n          <Drawer.Screen name=\"Tortas\" component={TortasScreen} />\r\n          <Drawer.Screen name=\"NewIngredient\" component={NewIngredientScreen} />\r\n        </Drawer.Navigator>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  sidebar: {\r\n    width: 60,\r\n    backgroundColor: '#bbe4fc',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: 1,\r\n  },\r\n  menu: {\r\n    width: 40,\r\n    height: 40,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  menuExpanded: {\r\n    width: 60,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  drawerStyle: {\r\n    backgroundColor: '#bbe4fc',\r\n    width: 250,\r\n  },\r\n  drawerLabel: {\r\n    fontFamily: 'Source Sans 3',\r\n  },\r\n});\r\n\r\nexport default AppNavigator;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,qBAAqB,QAAQ,0BAA0B;AAEhE,OAAOC,UAAU;AACjB,OAAOC,oBAAoB;AAC3B,OAAOC,YAAY;AACnB,OAAOC,mBAAmB;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/D,IAAMC,MAAM,GAAGT,qBAAqB,CAAC,CAAC;AAEtC,IAAMU,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAAkClB,QAAQ,CAAC,KAAK,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,UAAU,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC9B,IAAMI,UAAU,GAAGlB,aAAa,CAAC,CAAC;EAElC,IAAMmB,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBF,WAAW,CAAC,CAACD,UAAU,CAAC;EAC1B,CAAC;EAED,OACEN,KAAA,CAACd,IAAI;IAACwB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bf,IAAA,CAACZ,IAAI;MAACwB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAC1Bf,IAAA,CAACX,gBAAgB;QACfuB,KAAK,EAAE,CAACC,MAAM,CAACI,IAAI,EAAET,UAAU,GAAGK,MAAM,CAACK,YAAY,GAAG,IAAI,CAAE;QAC9DC,OAAO,EAAER,UAAW;QACpBS,aAAa,EAAE,GAAI;QAAAL,QAAA,EAEnBf,IAAA,CAACP,QAAQ;UAAC4B,IAAI,EAAEb,UAAU,GAAG,OAAO,GAAG,MAAO;UAACc,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAO,CAAE;MAAC,CACzD;IAAC,CACf,CAAC,EAEPvB,IAAA,CAACZ,IAAI;MAACwB,KAAK,EAAEC,MAAM,CAACW,OAAQ;MAAAT,QAAA,EAC1Bb,KAAA,CAACC,MAAM,CAACsB,SAAS;QACfC,gBAAgB,EAAC,MAAM;QACvBC,WAAW,EAAEd,MAAM,CAACc,WAAY;QAChCC,oBAAoB,EAAE;UACpBC,UAAU,EAAEhB,MAAM,CAACiB;QACrB,CAAE;QAAAf,QAAA,GAEFf,IAAA,CAACG,MAAM,CAAC4B,MAAM;UAACV,IAAI,EAAC,MAAM;UAACW,SAAS,EAAErC;QAAW,CAAE,CAAC,EACpDK,IAAA,CAACG,MAAM,CAAC4B,MAAM;UAACV,IAAI,EAAC,iBAAiB;UAACW,SAAS,EAAEpC;QAAqB,CAAE,CAAC,EACzEI,IAAA,CAACG,MAAM,CAAC4B,MAAM;UAACV,IAAI,EAAC,QAAQ;UAACW,SAAS,EAAEnC;QAAa,CAAE,CAAC,EACxDG,IAAA,CAACG,MAAM,CAAC4B,MAAM;UAACV,IAAI,EAAC,eAAe;UAACW,SAAS,EAAElC;QAAoB,CAAE,CAAC;MAAA,CACtD;IAAC,CACf,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMe,MAAM,GAAGvB,UAAU,CAAC2C,MAAM,CAAC;EAC/BnB,SAAS,EAAE;IACToB,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE;EACjB,CAAC;EACDnB,OAAO,EAAE;IACPoB,KAAK,EAAE,EAAE;IACTC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,MAAM,EAAE;EACV,CAAC;EACDvB,IAAI,EAAE;IACJmB,KAAK,EAAE,EAAE;IACTK,MAAM,EAAE,EAAE;IACVH,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDrB,YAAY,EAAE;IACZkB,KAAK,EAAE;EACT,CAAC;EACDZ,OAAO,EAAE;IACPU,IAAI,EAAE;EACR,CAAC;EACDP,WAAW,EAAE;IACXU,eAAe,EAAE,SAAS;IAC1BD,KAAK,EAAE;EACT,CAAC;EACDN,WAAW,EAAE;IACXY,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAetC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}