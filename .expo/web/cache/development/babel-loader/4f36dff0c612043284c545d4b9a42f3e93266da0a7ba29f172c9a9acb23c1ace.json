{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AbmIngredientesScreen = function AbmIngredientesScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    nombre = _useState2[0],\n    setNombre = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    unidadMedida = _useState4[0],\n    setUnidadMedida = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    tamanoPaquete = _useState6[0],\n    setTamanoPaquete = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    costo = _useState8[0],\n    setCosto = _useState8[1];\n  var handleGuardar = function handleGuardar() {\n    console.log('Datos del ingrediente:');\n    console.log('Nombre:', nombre);\n    console.log('Unidad de Medida:', unidadMedida);\n    console.log('Tamaño del Paquete:', tamanoPaquete);\n    console.log('Costo:', costo);\n    setNombre('');\n    setUnidadMedida('');\n    setTamanoPaquete('');\n    setCosto('');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nombre\",\n      value: nombre,\n      onChangeText: function onChangeText(text) {\n        return setNombre(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Unidad de Medida\",\n      value: unidadMedida,\n      onChangeText: function onChangeText(text) {\n        return setUnidadMedida(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Tama\\xF1o del Paquete\",\n      value: tamanoPaquete,\n      onChangeText: function onChangeText(text) {\n        return setTamanoPaquete(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Costo\",\n      value: costo,\n      onChangeText: function onChangeText(text) {\n        return setCosto(text);\n      }\n    }), _jsx(Button, {\n      title: \"Guardar\",\n      onPress: handleGuardar\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10\n  }\n});\nexport default AbmIngredientesScreen;","map":{"version":3,"names":["React","useState","View","TextInput","Button","StyleSheet","jsx","_jsx","jsxs","_jsxs","AbmIngredientesScreen","_useState","_useState2","_slicedToArray","nombre","setNombre","_useState3","_useState4","unidadMedida","setUnidadMedida","_useState5","_useState6","tamanoPaquete","setTamanoPaquete","_useState7","_useState8","costo","setCosto","handleGuardar","console","log","style","styles","container","children","input","placeholder","value","onChangeText","text","title","onPress","create","flex","padding","height","borderColor","borderWidth","marginBottom","paddingHorizontal"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/screens/abmIngredientesScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\r\n\r\nconst AbmIngredientesScreen = () => {\r\n  const [nombre, setNombre] = useState('');\r\n  const [unidadMedida, setUnidadMedida] = useState('');\r\n  const [tamanoPaquete, setTamanoPaquete] = useState('');\r\n  const [costo, setCosto] = useState('');\r\n\r\n  const handleGuardar = () => {\r\n    // Lógica para guardar los datos del ingrediente\r\n    // Puedes enviar los datos al backend o realizar otras acciones necesarias\r\n    // Aquí puedes implementar la lógica de creación, actualización o eliminación del ingrediente\r\n    console.log('Datos del ingrediente:');\r\n    console.log('Nombre:', nombre);\r\n    console.log('Unidad de Medida:', unidadMedida);\r\n    console.log('Tamaño del Paquete:', tamanoPaquete);\r\n    console.log('Costo:', costo);\r\n\r\n    // Limpia los campos después de guardar\r\n    setNombre('');\r\n    setUnidadMedida('');\r\n    setTamanoPaquete('');\r\n    setCosto('');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Nombre\"\r\n        value={nombre}\r\n        onChangeText={text => setNombre(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Unidad de Medida\"\r\n        value={unidadMedida}\r\n        onChangeText={text => setUnidadMedida(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Tamaño del Paquete\"\r\n        value={tamanoPaquete}\r\n        onChangeText={text => setTamanoPaquete(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Costo\"\r\n        value={costo}\r\n        onChangeText={text => setCosto(text)}\r\n      />\r\n      <Button title=\"Guardar\" onPress={handleGuardar} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n});\r\n\r\nexport default AbmIngredientesScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;EAClC,IAAAC,SAAA,GAA4BV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAAwCf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAA0CnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/CE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAA0BvB,QAAQ,CAAC,EAAE,CAAC;IAAAwB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtB,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAI1BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEhB,MAAM,CAAC;IAC9Be,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEZ,YAAY,CAAC;IAC9CW,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAER,aAAa,CAAC;IACjDO,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,CAAC;IAG5BX,SAAS,CAAC,EAAE,CAAC;IACbI,eAAe,CAAC,EAAE,CAAC;IACnBI,gBAAgB,CAAC,EAAE,CAAC;IACpBI,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,OACElB,KAAA,CAACP,IAAI;IAAC6B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B3B,IAAA,CAACJ,SAAS;MACR4B,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAEvB,MAAO;MACdwB,YAAY,EAAE,SAAAA,aAAAC,IAAI;QAAA,OAAIxB,SAAS,CAACwB,IAAI,CAAC;MAAA;IAAC,CACvC,CAAC,EACFhC,IAAA,CAACJ,SAAS;MACR4B,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEnB,YAAa;MACpBoB,YAAY,EAAE,SAAAA,aAAAC,IAAI;QAAA,OAAIpB,eAAe,CAACoB,IAAI,CAAC;MAAA;IAAC,CAC7C,CAAC,EACFhC,IAAA,CAACJ,SAAS;MACR4B,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,WAAW,EAAC,uBAAoB;MAChCC,KAAK,EAAEf,aAAc;MACrBgB,YAAY,EAAE,SAAAA,aAAAC,IAAI;QAAA,OAAIhB,gBAAgB,CAACgB,IAAI,CAAC;MAAA;IAAC,CAC9C,CAAC,EACFhC,IAAA,CAACJ,SAAS;MACR4B,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEX,KAAM;MACbY,YAAY,EAAE,SAAAA,aAAAC,IAAI;QAAA,OAAIZ,QAAQ,CAACY,IAAI,CAAC;MAAA;IAAC,CACtC,CAAC,EACFhC,IAAA,CAACH,MAAM;MAACoC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEb;IAAc,CAAE,CAAC;EAAA,CAC9C,CAAC;AAEX,CAAC;AAED,IAAMI,MAAM,GAAG3B,UAAU,CAACqC,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDT,KAAK,EAAE;IACLU,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,EAAE;IAChBC,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAevC,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}