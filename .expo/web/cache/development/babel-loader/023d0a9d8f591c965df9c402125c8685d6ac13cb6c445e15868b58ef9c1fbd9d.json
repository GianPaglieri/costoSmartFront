{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport HomeScreen from \"../views/homeScreen\";\nimport IngredientListScreen from \"../views/IngredientListScreen\";\nimport TortasScreen from \"../views/TortasScreen\";\nimport NewIngredientScreen from \"../views/NewIngredientScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar AppNavigator = function AppNavigator() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isExpanded = _useState2[0],\n    setExpanded = _useState2[1];\n  var navigation = useNavigation();\n  var toggleMenu = function toggleMenu() {\n    setExpanded(!isExpanded);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      style: [styles.menu, isExpanded ? styles.menuExpanded : null],\n      onPress: toggleMenu,\n      activeOpacity: 0.7,\n      children: [_jsx(Ionicons, {\n        name: isExpanded ? 'close' : 'menu',\n        size: 30,\n        color: \"black\"\n      }), isExpanded && _jsxs(View, {\n        style: styles.menuItems,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Overview\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Summary\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Tortas');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Tortas\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('IngredientStack');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Ingredientes\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Recetas\"\n          })\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.ingredientsContainer,\n      children: _jsxs(Drawer.Navigator, {\n        initialRouteName: \"Home\",\n        drawerStyle: styles.drawerStyle,\n        drawerContentOptions: {\n          labelStyle: styles.drawerLabel\n        },\n        children: [_jsx(Drawer.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Drawer.Screen, {\n          name: \"IngredientStack\",\n          component: IngredientListScreen\n        }), _jsx(Drawer.Screen, {\n          name: \"Tortas\",\n          component: TortasScreen\n        }), _jsx(Drawer.Screen, {\n          name: \"NewIngredient\",\n          component: NewIngredientScreen\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  menu: {\n    width: 60,\n    backgroundColor: '#bbe4fc',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 1\n  },\n  menuExpanded: {\n    width: 120\n  },\n  menuItems: {\n    marginTop: 10\n  },\n  menuItem: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 10\n  },\n  ingredientsContainer: {\n    flex: 1\n  },\n  drawerStyle: {\n    backgroundColor: '#bbe4fc',\n    width: 250\n  },\n  drawerLabel: {\n    fontFamily: 'Source Sans 3'\n  }\n});\nexport default AppNavigator;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","StyleSheet","Text","useNavigation","Ionicons","createDrawerNavigator","HomeScreen","IngredientListScreen","TortasScreen","NewIngredientScreen","jsx","_jsx","jsxs","_jsxs","Drawer","AppNavigator","_useState","_useState2","_slicedToArray","isExpanded","setExpanded","navigation","toggleMenu","style","styles","container","children","menu","menuExpanded","onPress","activeOpacity","name","size","color","menuItems","navigate","menuItem","ingredientsContainer","Navigator","initialRouteName","drawerStyle","drawerContentOptions","labelStyle","drawerLabel","Screen","component","create","flex","flexDirection","width","backgroundColor","alignItems","justifyContent","zIndex","marginTop","fontSize","fontWeight","marginBottom","fontFamily"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/components/Navigation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport HomeScreen from '../views/homeScreen';\r\nimport IngredientListScreen from '../views/IngredientListScreen';\r\nimport TortasScreen from '../views/TortasScreen';\r\nimport NewIngredientScreen from '../views/NewIngredientScreen';\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst AppNavigator = () => {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const toggleMenu = () => {\r\n    setExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={[styles.menu, isExpanded ? styles.menuExpanded : null]}\r\n        onPress={toggleMenu}\r\n        activeOpacity={0.7}\r\n      >\r\n        <Ionicons name={isExpanded ? 'close' : 'menu'} size={30} color=\"black\" />\r\n        {isExpanded && (\r\n          <View style={styles.menuItems}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Overview</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Summary</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Tortas');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Tortas</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('IngredientStack');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Ingredientes</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Recetas</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </TouchableOpacity>\r\n      <View style={styles.ingredientsContainer}>\r\n        <Drawer.Navigator\r\n          initialRouteName=\"Home\"\r\n          drawerStyle={styles.drawerStyle}\r\n          drawerContentOptions={{\r\n            labelStyle: styles.drawerLabel,\r\n          }}\r\n        >\r\n          <Drawer.Screen name=\"Home\" component={HomeScreen} />\r\n          <Drawer.Screen name=\"IngredientStack\" component={IngredientListScreen} />\r\n          <Drawer.Screen name=\"Tortas\" component={TortasScreen} />\r\n          <Drawer.Screen name=\"NewIngredient\" component={NewIngredientScreen} />\r\n        </Drawer.Navigator>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  menu: {\r\n    width: 60,\r\n    backgroundColor: '#bbe4fc',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: 1,\r\n  },\r\n  menuExpanded: {\r\n    width: 120,\r\n  },\r\n  menuItems: {\r\n    marginTop: 10,\r\n  },\r\n  menuItem: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    marginBottom: 10,\r\n  },\r\n  ingredientsContainer: {\r\n    flex: 1,\r\n  },\r\n  drawerStyle: {\r\n    backgroundColor: '#bbe4fc',\r\n    width: 250,\r\n  },\r\n  drawerLabel: {\r\n    fontFamily: 'Source Sans 3',\r\n  },\r\n});\r\n\r\nexport default AppNavigator;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}