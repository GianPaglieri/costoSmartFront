{"ast":null,"code":"export default function getDrawerStatusFromState(state) {\n  var _entry$status;\n  if (state.history == null) {\n    throw new Error(\"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\");\n  }\n  var entry = state.history.find(function (it) {\n    return it.type === 'drawer';\n  });\n  return (_entry$status = entry === null || entry === void 0 ? void 0 : entry.status) !== null && _entry$status !== void 0 ? _entry$status : 'closed';\n}","map":{"version":3,"names":["getDrawerStatusFromState","state","_entry$status","history","Error","entry","find","it","type","status"],"sources":["C:\\Users\\Gian\\Desktop\\CostoSmart\\frontend\\node_modules\\@react-navigation\\drawer\\lib\\module\\utils\\getDrawerStatusFromState.tsx"],"sourcesContent":["import type {\n  DrawerNavigationState,\n  ParamListBase,\n} from '@react-navigation/native';\n\nexport default function getDrawerStatusFromState(\n  state: DrawerNavigationState<ParamListBase>\n) {\n  if (state.history == null) {\n    throw new Error(\n      \"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\"\n    );\n  }\n\n  const entry = state.history.find((it) => it.type === 'drawer') as\n    | { type: 'drawer'; status: 'open' }\n    | undefined;\n\n  return entry?.status ?? 'closed';\n}\n"],"mappings":"AAKA,eAAe,SAASA,wBAATA,CACbC,KADa,EAEb;EAAA,IAAAC,aAAA;EACA,IAAID,KAAK,CAACE,OAAN,IAAiB,IAArB,EAA2B;IACzB,MAAM,IAAIC,KAAJ,CACJ,sGADI,CAAN;EAGD;EAED,IAAMC,KAAK,GAAGJ,KAAK,CAACE,OAAN,CAAcG,IAAd,CAAoB,UAAAC,EAAD;IAAA,OAAQA,EAAE,CAACC,IAAH,KAAY,QAAvC;EAAA,EAAd;EAIA,QAAAN,aAAA,GAAOG,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEI,MAAd,cAAAP,aAAA,cAAAA,aAAA,GAAwB,QAAxB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}