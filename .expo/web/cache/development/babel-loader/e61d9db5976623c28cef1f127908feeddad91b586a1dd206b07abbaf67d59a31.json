{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"../views/homeScreen\";\nimport IngredientListScreen from \"../views/IngredientListScreen\";\nimport TortasScreen from \"../views/TortasScreen\";\nimport NewIngredientScreen from \"../views/NewIngredientScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\nvar TabNavigator = function TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    tabBarOptions: {\n      activeTintColor: '#86C997',\n      inactiveTintColor: 'gray',\n      labelStyle: {\n        fontSize: 12,\n        fontWeight: 'bold'\n      },\n      style: {\n        backgroundColor: '#86C997',\n        borderTopWidth: 1,\n        borderTopColor: '#ccc'\n      },\n      showIcon: true,\n      showLabel: true,\n      tabStyle: {\n        flexDirection: 'row'\n      },\n      indicatorStyle: {\n        backgroundColor: '#86C997'\n      }\n    },\n    initialRouteName: \"Home\",\n    children: [_jsx(Tab.Screen, {\n      name: \"IngredientStack\",\n      component: IngredientListScreen,\n      options: {\n        tabBarLabel: 'Ingredientes',\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(Ionicons, {\n            name: \"list\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        tabBarLabel: 'Inicio',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(Ionicons, {\n            name: \"home\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Tortas\",\n      component: TortasScreen,\n      options: {\n        tabBarLabel: 'Tortas',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(Ionicons, {\n            name: \"cake\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isExpanded = _useState2[0],\n    setExpanded = _useState2[1];\n  var navigation = useNavigation();\n  var toggleMenu = function toggleMenu() {\n    setExpanded(!isExpanded);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      style: [styles.menu, isExpanded ? styles.menuExpanded : null],\n      onPress: toggleMenu,\n      activeOpacity: 0.7,\n      children: [_jsx(Ionicons, {\n        name: isExpanded ? 'close' : 'menu',\n        size: 30,\n        color: \"black\"\n      }), isExpanded && _jsxs(View, {\n        style: styles.menuItems,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Overview\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Summary\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Tortas');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Tortas\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('IngredientStack');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Ingredientes\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Recetas\"\n          })\n        })]\n      })]\n    }), _jsx(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      children: _jsx(Drawer.Screen, {\n        name: \"Main\",\n        component: TabNavigator\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  menu: {\n    width: 60,\n    backgroundColor: '#86C997',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transitionProperty: 'width',\n    transitionDuration: '0.3s',\n    zIndex: 1\n  },\n  menuExpanded: {\n    width: 120\n  },\n  menuItems: {\n    marginTop: 10\n  },\n  menuItem: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 10\n  }\n});\nexport default AppNavigator;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","StyleSheet","Text","useNavigation","Ionicons","createDrawerNavigator","createBottomTabNavigator","HomeScreen","IngredientListScreen","TortasScreen","NewIngredientScreen","jsx","_jsx","jsxs","_jsxs","Drawer","Tab","TabNavigator","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","fontSize","fontWeight","style","backgroundColor","borderTopWidth","borderTopColor","showIcon","showLabel","tabStyle","flexDirection","indicatorStyle","initialRouteName","children","Screen","name","component","options","tabBarLabel","tabBarIcon","_ref","color","size","_ref2","_ref3","AppNavigator","_useState","_useState2","_slicedToArray","isExpanded","setExpanded","navigation","toggleMenu","styles","container","menu","menuExpanded","onPress","activeOpacity","menuItems","navigate","menuItem","create","flex","width","alignItems","justifyContent","transitionProperty","transitionDuration","zIndex","marginTop","marginBottom"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/components/Navigation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\nimport HomeScreen from '../views/homeScreen';\r\nimport IngredientListScreen from '../views/IngredientListScreen';\r\nimport TortasScreen from '../views/TortasScreen';\r\nimport NewIngredientScreen from '../views/NewIngredientScreen';\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst TabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      tabBarOptions={{\r\n        activeTintColor: '#86C997',\r\n        inactiveTintColor: 'gray',\r\n        labelStyle: {\r\n          fontSize: 12,\r\n          fontWeight: 'bold',\r\n        },\r\n        style: {\r\n          backgroundColor: '#86C997',\r\n          borderTopWidth: 1,\r\n          borderTopColor: '#ccc',\r\n        },\r\n        showIcon: true,\r\n        showLabel: true,\r\n        tabStyle: {\r\n          flexDirection: 'row',\r\n        },\r\n        indicatorStyle: {\r\n          backgroundColor: '#86C997',\r\n        },\r\n      }}\r\n      initialRouteName=\"Home\"\r\n    >\r\n      <Tab.Screen\r\n        name=\"IngredientStack\"\r\n        component={IngredientListScreen}\r\n        options={{\r\n          tabBarLabel: 'Ingredientes',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"list\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{\r\n          tabBarLabel: 'Inicio',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"home\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Tortas\"\r\n        component={TortasScreen}\r\n        options={{\r\n          tabBarLabel: 'Tortas',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"cake\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const toggleMenu = () => {\r\n    setExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={[styles.menu, isExpanded ? styles.menuExpanded : null]}\r\n        onPress={toggleMenu}\r\n        activeOpacity={0.7}\r\n      >\r\n        <Ionicons name={isExpanded ? 'close' : 'menu'} size={30} color=\"black\" />\r\n        {isExpanded && (\r\n          <View style={styles.menuItems}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Overview</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Summary</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Tortas');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Tortas</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('IngredientStack');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Ingredientes</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Recetas</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </TouchableOpacity>\r\n      <Drawer.Navigator initialRouteName=\"Home\">\r\n        <Drawer.Screen name=\"Main\" component={TabNavigator} />\r\n      </Drawer.Navigator>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  menu: {\r\n    width: 60,\r\n    backgroundColor: '#86C997',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    transitionProperty: 'width',\r\n    transitionDuration: '0.3s',\r\n    zIndex: 1,\r\n  },\r\n  menuExpanded: {\r\n    width: 120,\r\n  },\r\n  menuItems: {\r\n    marginTop: 10,\r\n  },\r\n  menuItem: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default AppNavigator;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}