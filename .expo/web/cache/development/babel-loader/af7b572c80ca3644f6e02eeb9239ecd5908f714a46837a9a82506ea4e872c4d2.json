{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { getHeaderTitle, HeaderBackContext, HeaderHeightContext, HeaderShownContext } from '@react-navigation/elements';\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { forModalPresentationIOS } from \"../../TransitionConfigs/CardStyleInterpolators\";\nimport ModalPresentationContext from \"../../utils/ModalPresentationContext\";\nimport useKeyboardManager from \"../../utils/useKeyboardManager\";\nimport Card from \"./Card\";\nvar EPSILON = 0.1;\nfunction CardContainer(_ref) {\n  var index = _ref.index,\n    active = _ref.active,\n    closing = _ref.closing,\n    gesture = _ref.gesture,\n    focused = _ref.focused,\n    getPreviousScene = _ref.getPreviousScene,\n    getFocusedRoute = _ref.getFocusedRoute,\n    headerDarkContent = _ref.headerDarkContent,\n    hasAbsoluteFloatHeader = _ref.hasAbsoluteFloatHeader,\n    headerHeight = _ref.headerHeight,\n    onHeaderHeightChange = _ref.onHeaderHeightChange,\n    isParentHeaderShown = _ref.isParentHeaderShown,\n    isNextScreenTransparent = _ref.isNextScreenTransparent,\n    detachCurrentScreen = _ref.detachCurrentScreen,\n    interpolationIndex = _ref.interpolationIndex,\n    layout = _ref.layout,\n    onCloseRoute = _ref.onCloseRoute,\n    onOpenRoute = _ref.onOpenRoute,\n    onGestureCancel = _ref.onGestureCancel,\n    onGestureEnd = _ref.onGestureEnd,\n    onGestureStart = _ref.onGestureStart,\n    onTransitionEnd = _ref.onTransitionEnd,\n    onTransitionStart = _ref.onTransitionStart,\n    renderHeader = _ref.renderHeader,\n    renderScene = _ref.renderScene,\n    safeAreaInsetBottom = _ref.safeAreaInsetBottom,\n    safeAreaInsetLeft = _ref.safeAreaInsetLeft,\n    safeAreaInsetRight = _ref.safeAreaInsetRight,\n    safeAreaInsetTop = _ref.safeAreaInsetTop,\n    scene = _ref.scene;\n  var parentHeaderHeight = React.useContext(HeaderHeightContext);\n  var _useKeyboardManager = useKeyboardManager(React.useCallback(function () {\n      var _scene$descriptor = scene.descriptor,\n        options = _scene$descriptor.options,\n        navigation = _scene$descriptor.navigation;\n      return navigation.isFocused() && options.keyboardHandlingEnabled !== false;\n    }, [scene.descriptor])),\n    onPageChangeStart = _useKeyboardManager.onPageChangeStart,\n    onPageChangeCancel = _useKeyboardManager.onPageChangeCancel,\n    onPageChangeConfirm = _useKeyboardManager.onPageChangeConfirm;\n  var handleOpen = function handleOpen() {\n    var route = scene.descriptor.route;\n    onTransitionEnd({\n      route: route\n    }, false);\n    onOpenRoute({\n      route: route\n    });\n  };\n  var handleClose = function handleClose() {\n    var route = scene.descriptor.route;\n    onTransitionEnd({\n      route: route\n    }, true);\n    onCloseRoute({\n      route: route\n    });\n  };\n  var handleGestureBegin = function handleGestureBegin() {\n    var route = scene.descriptor.route;\n    onPageChangeStart();\n    onGestureStart({\n      route: route\n    });\n  };\n  var handleGestureCanceled = function handleGestureCanceled() {\n    var route = scene.descriptor.route;\n    onPageChangeCancel();\n    onGestureCancel({\n      route: route\n    });\n  };\n  var handleGestureEnd = function handleGestureEnd() {\n    var route = scene.descriptor.route;\n    onGestureEnd({\n      route: route\n    });\n  };\n  var handleTransition = function handleTransition(_ref2) {\n    var closing = _ref2.closing,\n      gesture = _ref2.gesture;\n    var route = scene.descriptor.route;\n    if (!gesture) {\n      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm(true);\n    } else if (active && closing) {\n      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm(false);\n    } else {\n      onPageChangeCancel === null || onPageChangeCancel === void 0 ? void 0 : onPageChangeCancel();\n    }\n    onTransitionStart === null || onTransitionStart === void 0 ? void 0 : onTransitionStart({\n      route: route\n    }, closing);\n  };\n  var insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft\n  };\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var _React$useState = React.useState('box-none'),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    pointerEvents = _React$useState2[0],\n    setPointerEvents = _React$useState2[1];\n  React.useEffect(function () {\n    var _scene$progress$next, _scene$progress$next$;\n    var listener = (_scene$progress$next = scene.progress.next) === null || _scene$progress$next === void 0 ? void 0 : (_scene$progress$next$ = _scene$progress$next.addListener) === null || _scene$progress$next$ === void 0 ? void 0 : _scene$progress$next$.call(_scene$progress$next, function (_ref3) {\n      var value = _ref3.value;\n      setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n    });\n    return function () {\n      if (listener) {\n        var _scene$progress$next2, _scene$progress$next3;\n        (_scene$progress$next2 = scene.progress.next) === null || _scene$progress$next2 === void 0 ? void 0 : (_scene$progress$next3 = _scene$progress$next2.removeListener) === null || _scene$progress$next3 === void 0 ? void 0 : _scene$progress$next3.call(_scene$progress$next2, listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n  var _scene$descriptor$opt = scene.descriptor.options,\n    presentation = _scene$descriptor$opt.presentation,\n    animationEnabled = _scene$descriptor$opt.animationEnabled,\n    cardOverlay = _scene$descriptor$opt.cardOverlay,\n    cardOverlayEnabled = _scene$descriptor$opt.cardOverlayEnabled,\n    cardShadowEnabled = _scene$descriptor$opt.cardShadowEnabled,\n    cardStyle = _scene$descriptor$opt.cardStyle,\n    cardStyleInterpolator = _scene$descriptor$opt.cardStyleInterpolator,\n    gestureDirection = _scene$descriptor$opt.gestureDirection,\n    gestureEnabled = _scene$descriptor$opt.gestureEnabled,\n    gestureResponseDistance = _scene$descriptor$opt.gestureResponseDistance,\n    gestureVelocityImpact = _scene$descriptor$opt.gestureVelocityImpact,\n    headerMode = _scene$descriptor$opt.headerMode,\n    headerShown = _scene$descriptor$opt.headerShown,\n    transitionSpec = _scene$descriptor$opt.transitionSpec;\n  var isModalPresentation = cardStyleInterpolator === forModalPresentationIOS;\n  var previousScene = getPreviousScene({\n    route: scene.descriptor.route\n  });\n  var backTitle;\n  if (previousScene) {\n    var _previousScene$descri = previousScene.descriptor,\n      options = _previousScene$descri.options,\n      route = _previousScene$descri.route;\n    backTitle = getHeaderTitle(options, route.name);\n  }\n  var headerBack = React.useMemo(function () {\n    return backTitle !== undefined ? {\n      title: backTitle\n    } : undefined;\n  }, [backTitle]);\n  return React.createElement(Card, {\n    interpolationIndex: interpolationIndex,\n    gestureDirection: gestureDirection,\n    layout: layout,\n    insets: insets,\n    gesture: gesture,\n    current: scene.progress.current,\n    next: scene.progress.next,\n    closing: closing,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    overlay: cardOverlay,\n    overlayEnabled: cardOverlayEnabled,\n    shadowEnabled: cardShadowEnabled,\n    onTransition: handleTransition,\n    onGestureBegin: handleGestureBegin,\n    onGestureCanceled: handleGestureCanceled,\n    onGestureEnd: handleGestureEnd,\n    gestureEnabled: index === 0 ? false : gestureEnabled,\n    gestureResponseDistance: gestureResponseDistance,\n    gestureVelocityImpact: gestureVelocityImpact,\n    transitionSpec: transitionSpec,\n    styleInterpolator: cardStyleInterpolator,\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    pointerEvents: active ? 'box-none' : pointerEvents,\n    pageOverflowEnabled: headerMode !== 'float' && presentation !== 'modal',\n    headerDarkContent: headerDarkContent,\n    containerStyle: hasAbsoluteFloatHeader && headerMode !== 'screen' ? {\n      marginTop: headerHeight\n    } : null,\n    contentStyle: [{\n      backgroundColor: presentation === 'transparentModal' ? 'transparent' : colors.background\n    }, cardStyle],\n    style: [{\n      overflow: active ? undefined : 'hidden',\n      display: animationEnabled === false && isNextScreenTransparent === false && detachCurrentScreen !== false && !focused ? 'none' : 'flex'\n    }, StyleSheet.absoluteFill]\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.scene\n  }, React.createElement(HeaderBackContext.Provider, {\n    value: headerBack\n  }, React.createElement(HeaderShownContext.Provider, {\n    value: isParentHeaderShown || headerShown !== false\n  }, React.createElement(HeaderHeightContext.Provider, {\n    value: headerShown ? headerHeight : parentHeaderHeight !== null && parentHeaderHeight !== void 0 ? parentHeaderHeight : 0\n  }, renderScene({\n    route: scene.descriptor.route\n  }))))), headerMode !== 'float' ? React.createElement(ModalPresentationContext.Provider, {\n    value: isModalPresentation && interpolationIndex !== 0\n  }, renderHeader({\n    mode: 'screen',\n    layout: layout,\n    scenes: [previousScene, scene],\n    getPreviousScene: getPreviousScene,\n    getFocusedRoute: getFocusedRoute,\n    onContentHeightChange: onHeaderHeightChange\n  })) : null));\n}\nexport default React.memo(CardContainer);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  scene: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["getHeaderTitle","HeaderBackContext","HeaderHeightContext","HeaderShownContext","useTheme","React","StyleSheet","View","forModalPresentationIOS","ModalPresentationContext","useKeyboardManager","Card","EPSILON","CardContainer","_ref","index","active","closing","gesture","focused","getPreviousScene","getFocusedRoute","headerDarkContent","hasAbsoluteFloatHeader","headerHeight","onHeaderHeightChange","isParentHeaderShown","isNextScreenTransparent","detachCurrentScreen","interpolationIndex","layout","onCloseRoute","onOpenRoute","onGestureCancel","onGestureEnd","onGestureStart","onTransitionEnd","onTransitionStart","renderHeader","renderScene","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","parentHeaderHeight","useContext","_useKeyboardManager","useCallback","_scene$descriptor","descriptor","options","navigation","isFocused","keyboardHandlingEnabled","onPageChangeStart","onPageChangeCancel","onPageChangeConfirm","handleOpen","route","handleClose","handleGestureBegin","handleGestureCanceled","handleGestureEnd","handleTransition","_ref2","insets","top","right","bottom","left","_useTheme","colors","_React$useState","useState","_React$useState2","_slicedToArray","pointerEvents","setPointerEvents","useEffect","_scene$progress$next","_scene$progress$next$","listener","progress","next","addListener","call","_ref3","value","_scene$progress$next2","_scene$progress$next3","removeListener","_scene$descriptor$opt","presentation","animationEnabled","cardOverlay","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","headerMode","headerShown","transitionSpec","isModalPresentation","previousScene","backTitle","_previousScene$descri","name","headerBack","useMemo","undefined","title","createElement","current","onOpen","onClose","overlay","overlayEnabled","shadowEnabled","onTransition","onGestureBegin","onGestureCanceled","styleInterpolator","accessibilityElementsHidden","importantForAccessibility","pageOverflowEnabled","containerStyle","marginTop","contentStyle","backgroundColor","background","style","overflow","display","absoluteFill","styles","container","Provider","mode","scenes","onContentHeightChange","memo","create","flex","flexDirection"],"sources":["C:\\Users\\Gian\\Desktop\\CostoSmart\\frontend\\node_modules\\@react-navigation\\stack\\lib\\module\\views\\Stack\\CardContainer.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n} from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport type { Layout, Scene } from '../../types';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport useKeyboardManager from '../../utils/useKeyboardManager';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport Card from './Card';\n\ntype Props = {\n  index: number;\n  interpolationIndex: number;\n  active: boolean;\n  focused: boolean;\n  closing: boolean;\n  layout: Layout;\n  gesture: Animated.Value;\n  scene: Scene;\n  headerDarkContent: boolean | undefined;\n  safeAreaInsetTop: number;\n  safeAreaInsetRight: number;\n  safeAreaInsetBottom: number;\n  safeAreaInsetLeft: number;\n  getPreviousScene: (props: { route: Route<string> }) => Scene | undefined;\n  getFocusedRoute: () => Route<string>;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onGestureStart: (props: { route: Route<string> }) => void;\n  onGestureEnd: (props: { route: Route<string> }) => void;\n  onGestureCancel: (props: { route: Route<string> }) => void;\n  hasAbsoluteFloatHeader: boolean;\n  headerHeight: number;\n  onHeaderHeightChange: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  isParentHeaderShown: boolean;\n  isNextScreenTransparent: boolean;\n  detachCurrentScreen: boolean;\n};\n\nconst EPSILON = 0.1;\n\nfunction CardContainer({\n  index,\n  active,\n  closing,\n  gesture,\n  focused,\n  getPreviousScene,\n  getFocusedRoute,\n  headerDarkContent,\n  hasAbsoluteFloatHeader,\n  headerHeight,\n  onHeaderHeightChange,\n  isParentHeaderShown,\n  isNextScreenTransparent,\n  detachCurrentScreen,\n  interpolationIndex,\n  layout,\n  onCloseRoute,\n  onOpenRoute,\n  onGestureCancel,\n  onGestureEnd,\n  onGestureStart,\n  onTransitionEnd,\n  onTransitionStart,\n  renderHeader,\n  renderScene,\n  safeAreaInsetBottom,\n  safeAreaInsetLeft,\n  safeAreaInsetRight,\n  safeAreaInsetTop,\n  scene,\n}: Props) {\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const { onPageChangeStart, onPageChangeCancel, onPageChangeConfirm } =\n    useKeyboardManager(\n      React.useCallback(() => {\n        const { options, navigation } = scene.descriptor;\n\n        return (\n          navigation.isFocused() && options.keyboardHandlingEnabled !== false\n        );\n      }, [scene.descriptor])\n    );\n\n  const handleOpen = () => {\n    const { route } = scene.descriptor;\n\n    onTransitionEnd({ route }, false);\n    onOpenRoute({ route });\n  };\n\n  const handleClose = () => {\n    const { route } = scene.descriptor;\n\n    onTransitionEnd({ route }, true);\n    onCloseRoute({ route });\n  };\n\n  const handleGestureBegin = () => {\n    const { route } = scene.descriptor;\n\n    onPageChangeStart();\n    onGestureStart({ route });\n  };\n\n  const handleGestureCanceled = () => {\n    const { route } = scene.descriptor;\n\n    onPageChangeCancel();\n    onGestureCancel({ route });\n  };\n\n  const handleGestureEnd = () => {\n    const { route } = scene.descriptor;\n\n    onGestureEnd({ route });\n  };\n\n  const handleTransition = ({\n    closing,\n    gesture,\n  }: {\n    closing: boolean;\n    gesture: boolean;\n  }) => {\n    const { route } = scene.descriptor;\n\n    if (!gesture) {\n      onPageChangeConfirm?.(true);\n    } else if (active && closing) {\n      onPageChangeConfirm?.(false);\n    } else {\n      onPageChangeCancel?.();\n    }\n\n    onTransitionStart?.({ route }, closing);\n  };\n\n  const insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft,\n  };\n\n  const { colors } = useTheme();\n\n  const [pointerEvents, setPointerEvents] =\n    React.useState<'box-none' | 'none'>('box-none');\n\n  React.useEffect(() => {\n    const listener = scene.progress.next?.addListener?.(\n      ({ value }: { value: number }) => {\n        setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n      }\n    );\n\n    return () => {\n      if (listener) {\n        scene.progress.next?.removeListener?.(listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n\n  const {\n    presentation,\n    animationEnabled,\n    cardOverlay,\n    cardOverlayEnabled,\n    cardShadowEnabled,\n    cardStyle,\n    cardStyleInterpolator,\n    gestureDirection,\n    gestureEnabled,\n    gestureResponseDistance,\n    gestureVelocityImpact,\n    headerMode,\n    headerShown,\n    transitionSpec,\n  } = scene.descriptor.options;\n\n  const isModalPresentation = cardStyleInterpolator === forModalPresentationIOS;\n  const previousScene = getPreviousScene({ route: scene.descriptor.route });\n\n  let backTitle: string | undefined;\n\n  if (previousScene) {\n    const { options, route } = previousScene.descriptor;\n\n    backTitle = getHeaderTitle(options, route.name);\n  }\n\n  const headerBack = React.useMemo(\n    () => (backTitle !== undefined ? { title: backTitle } : undefined),\n    [backTitle]\n  );\n\n  return (\n    <Card\n      interpolationIndex={interpolationIndex}\n      gestureDirection={gestureDirection}\n      layout={layout}\n      insets={insets}\n      gesture={gesture}\n      current={scene.progress.current}\n      next={scene.progress.next}\n      closing={closing}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      overlay={cardOverlay}\n      overlayEnabled={cardOverlayEnabled}\n      shadowEnabled={cardShadowEnabled}\n      onTransition={handleTransition}\n      onGestureBegin={handleGestureBegin}\n      onGestureCanceled={handleGestureCanceled}\n      onGestureEnd={handleGestureEnd}\n      gestureEnabled={index === 0 ? false : gestureEnabled}\n      gestureResponseDistance={gestureResponseDistance}\n      gestureVelocityImpact={gestureVelocityImpact}\n      transitionSpec={transitionSpec}\n      styleInterpolator={cardStyleInterpolator}\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      pointerEvents={active ? 'box-none' : pointerEvents}\n      pageOverflowEnabled={headerMode !== 'float' && presentation !== 'modal'}\n      headerDarkContent={headerDarkContent}\n      containerStyle={\n        hasAbsoluteFloatHeader && headerMode !== 'screen'\n          ? { marginTop: headerHeight }\n          : null\n      }\n      contentStyle={[\n        {\n          backgroundColor:\n            presentation === 'transparentModal'\n              ? 'transparent'\n              : colors.background,\n        },\n        cardStyle,\n      ]}\n      style={[\n        {\n          // This is necessary to avoid unfocused larger pages increasing scroll area\n          // The issue can be seen on the web when a smaller screen is pushed over a larger one\n          overflow: active ? undefined : 'hidden',\n          display:\n            // Hide unfocused screens when animation isn't enabled\n            // This is also necessary for a11y on web\n            animationEnabled === false &&\n            isNextScreenTransparent === false &&\n            detachCurrentScreen !== false &&\n            !focused\n              ? 'none'\n              : 'flex',\n        },\n        StyleSheet.absoluteFill,\n      ]}\n    >\n      <View style={styles.container}>\n        <View style={styles.scene}>\n          <HeaderBackContext.Provider value={headerBack}>\n            <HeaderShownContext.Provider\n              value={isParentHeaderShown || headerShown !== false}\n            >\n              <HeaderHeightContext.Provider\n                value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n              >\n                {renderScene({ route: scene.descriptor.route })}\n              </HeaderHeightContext.Provider>\n            </HeaderShownContext.Provider>\n          </HeaderBackContext.Provider>\n        </View>\n        {headerMode !== 'float' ? (\n          <ModalPresentationContext.Provider\n            value={isModalPresentation && interpolationIndex !== 0}\n          >\n            {renderHeader({\n              mode: 'screen',\n              layout,\n              scenes: [previousScene, scene],\n              getPreviousScene,\n              getFocusedRoute,\n              onContentHeightChange: onHeaderHeightChange,\n            })}\n          </ModalPresentationContext.Provider>\n        ) : null}\n      </View>\n    </Card>\n  );\n}\n\nexport default React.memo(CardContainer);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  scene: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}