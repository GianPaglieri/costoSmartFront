{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar API_URL = 'http://localhost:3000';\nexport var fetchIngredientes = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var response = yield fetch(API_URL + \"/ingredientes\");\n      var data = yield response.json();\n      return data;\n    } catch (error) {\n      console.error('Error al obtener los ingredientes:', error);\n      return [];\n    }\n  });\n  return function fetchIngredientes() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var agregarIngrediente = function () {\n  var _ref2 = _asyncToGenerator(function* (ingrediente) {\n    try {\n      var response = yield fetch(API_URL + \"/ingredientes\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(ingrediente)\n      });\n      var data = yield response.json();\n      return data;\n    } catch (error) {\n      console.error('Error al agregar el ingrediente:', error);\n      return {\n        success: false\n      };\n    }\n  });\n  return function agregarIngrediente(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var editarIngrediente = function () {\n  var _ref3 = _asyncToGenerator(function* (ingrediente) {\n    try {\n      var response = yield fetch(API_URL + \"/ingredientes/\" + ingrediente.id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(ingrediente)\n      });\n      var data = yield response.json();\n      return data;\n    } catch (error) {\n      console.error('Error al editar el ingrediente:', error);\n      return {\n        success: false\n      };\n    }\n  });\n  return function editarIngrediente(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var borrarIngrediente = function () {\n  var _ref4 = _asyncToGenerator(function* (id) {\n    console.log(API_URL + \"/ingredientes/\" + id);\n    try {\n      console.log(API_URL + \"/ingredientes/\" + id);\n      var response = yield fetch(API_URL + \"/ingredientes/\" + id, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        console.log('Ingrediente eliminado exitosamente');\n        return {\n          success: true\n        };\n      } else {\n        var error = yield response.json();\n        console.error('Error al eliminar el ingrediente:', error);\n        return {\n          success: false,\n          error: error\n        };\n      }\n    } catch (error) {\n      console.error('Error en la solicitud de borrado del ingrediente:', error);\n      return {\n        success: false,\n        error: error\n      };\n    }\n  });\n  return function borrarIngrediente(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["API_URL","fetchIngredientes","_ref","_asyncToGenerator","response","fetch","data","json","error","console","apply","arguments","agregarIngrediente","_ref2","ingrediente","method","headers","body","JSON","stringify","success","_x","editarIngrediente","_ref3","id","_x2","borrarIngrediente","_ref4","log","ok","_x3"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/controllers/IngredientController.js"],"sourcesContent":["const API_URL = 'http://localhost:3000';\r\n\r\nexport const fetchIngredientes = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/ingredientes`);\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error al obtener los ingredientes:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const agregarIngrediente = async (ingrediente) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/ingredientes`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(ingrediente),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error al agregar el ingrediente:', error);\r\n    return { success: false };\r\n  }\r\n};\r\n\r\nexport const editarIngrediente = async (ingrediente) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/ingredientes/${ingrediente.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(ingrediente),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error al editar el ingrediente:', error);\r\n    return { success: false };\r\n  }\r\n};\r\n\r\nexport const borrarIngrediente = async (id) => {\r\n  console.log(`${API_URL}/ingredientes/${id}`);\r\n  try {\r\n    console.log(`${API_URL}/ingredientes/${id}`);\r\n    const response = await fetch(`${API_URL}/ingredientes/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    if (response.ok) {\r\n      console.log('Ingrediente eliminado exitosamente');\r\n      return { success: true };\r\n    } else {\r\n      const error = await response.json();\r\n      console.error('Error al eliminar el ingrediente:', error);\r\n      return { success: false, error };\r\n    }\r\n  } catch (error) {\r\n    console.error('Error en la solicitud de borrado del ingrediente:', error);\r\n    return { success: false, error };\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}