{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from \"../views/homeScreen\";\nimport IngredientListScreen from \"../views/IngredientListScreen\";\nimport TortasScreen from \"../views/TortasScreen\";\nimport NewIngredientScreen from \"../views/NewIngredientScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar TabNavigator = function TabNavigator() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isExpanded = _useState2[0],\n    setExpanded = _useState2[1];\n  var navigation = useNavigation();\n  var toggleMenu = function toggleMenu() {\n    setExpanded(!isExpanded);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(TouchableOpacity, {\n      style: [styles.menu, isExpanded ? styles.menuExpanded : null],\n      onPress: toggleMenu,\n      activeOpacity: 0.7,\n      children: [_jsx(Ionicons, {\n        name: isExpanded ? 'close' : 'menu',\n        size: 30,\n        color: \"black\"\n      }), isExpanded && _jsxs(View, {\n        style: styles.menuItems,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Overview\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Summary\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Tortas');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Tortas\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('IngredientStack');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Ingredientes\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Recetas\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: TabNavigator\n    }), _jsx(Stack.Screen, {\n      name: \"IngredientStack\",\n      component: IngredientListStackNavigator\n    }), _jsx(Stack.Screen, {\n      name: \"Tortas\",\n      component: TortasStackNavigator\n    }), _jsx(Stack.Screen, {\n      name: \"NewIngredient\",\n      component: NewIngredientScreen\n    })]\n  });\n};\nvar IngredientListStackNavigator = function IngredientListStackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"IngredientList\",\n      component: IngredientListScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NewIngredient\",\n      component: NewIngredientScreen,\n      options: {\n        title: 'Nuevo Ingrediente'\n      }\n    })]\n  });\n};\nvar TortasStackNavigator = function TortasStackNavigator() {\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: \"Tortas\",\n      component: TortasScreen,\n      options: {\n        headerShown: false\n      }\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  menu: {\n    width: 60,\n    backgroundColor: '#86C997',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transitionProperty: 'width',\n    transitionDuration: '0.3s',\n    zIndex: 1\n  },\n  menuExpanded: {\n    width: 120\n  },\n  menuItems: {\n    marginTop: 10\n  },\n  menuItem: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 10\n  }\n});\nexport default AppNavigator;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","StyleSheet","Text","useNavigation","Ionicons","createStackNavigator","HomeScreen","IngredientListScreen","TortasScreen","NewIngredientScreen","jsx","_jsx","jsxs","_jsxs","Stack","TabNavigator","_useState","_useState2","_slicedToArray","isExpanded","setExpanded","navigation","toggleMenu","style","styles","container","children","menu","menuExpanded","onPress","activeOpacity","name","size","color","menuItems","navigate","menuItem","AppNavigator","Navigator","initialRouteName","screenOptions","headerShown","Screen","component","IngredientListStackNavigator","TortasStackNavigator","options","title","create","flex","flexDirection","width","backgroundColor","alignItems","justifyContent","transitionProperty","transitionDuration","zIndex","marginTop","fontSize","fontWeight","marginBottom"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/components/Navigation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport HomeScreen from '../views/homeScreen';\r\nimport IngredientListScreen from '../views/IngredientListScreen';\r\nimport TortasScreen from '../views/TortasScreen';\r\nimport NewIngredientScreen from '../views/NewIngredientScreen';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst TabNavigator = () => {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const toggleMenu = () => {\r\n    setExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={[styles.menu, isExpanded ? styles.menuExpanded : null]}\r\n        onPress={toggleMenu}\r\n        activeOpacity={0.7}\r\n      >\r\n        <Ionicons name={isExpanded ? 'close' : 'menu'} size={30} color=\"black\" />\r\n        {isExpanded && (\r\n          <View style={styles.menuItems}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Overview</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Summary</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Tortas');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Tortas</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('IngredientStack');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Ingredientes</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Recetas</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  return (\r\n    <Stack.Navigator initialRouteName=\"Home\" screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Home\" component={TabNavigator} />\r\n      <Stack.Screen name=\"IngredientStack\" component={IngredientListStackNavigator} />\r\n      <Stack.Screen name=\"Tortas\" component={TortasStackNavigator} />\r\n      <Stack.Screen name=\"NewIngredient\" component={NewIngredientScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nconst IngredientListStackNavigator = () => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"IngredientList\"\r\n        component={IngredientListScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"NewIngredient\"\r\n        component={NewIngredientScreen}\r\n        options={{ title: 'Nuevo Ingrediente' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nconst TortasStackNavigator = () => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Tortas\"\r\n        component={TortasScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  menu: {\r\n    width: 60,\r\n    backgroundColor: '#86C997',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    transitionProperty: 'width',\r\n    transitionDuration: '0.3s',\r\n    zIndex: 1,\r\n  },\r\n  menuExpanded: {\r\n    width: 120,\r\n  },\r\n  menuItems: {\r\n    marginTop: 10,\r\n  },\r\n  menuItem: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default AppNavigator;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}