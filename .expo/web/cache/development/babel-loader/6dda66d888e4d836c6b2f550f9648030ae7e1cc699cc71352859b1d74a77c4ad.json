{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { fetchIngredientes } from \"../controllers/IngredientController\";\nimport styles from \"../styles/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar IngredientListScreen = function IngredientListScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    ingredientes = _useState2[0],\n    setIngredientes = _useState2[1];\n  useEffect(function () {\n    obtenerIngredientes();\n  }, []);\n  var obtenerIngredientes = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var ingredientesData = yield fetchIngredientes();\n        setIngredientes(ingredientesData);\n      } catch (error) {\n        console.error('Error al obtener los ingredientes:', error);\n      }\n    });\n    return function obtenerIngredientes() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var renderizarItem = function renderizarItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.cell,\n        children: item.nombre\n      }), _jsx(Text, {\n        style: styles.cell,\n        children: item.unidad_Medida\n      }), _jsx(Text, {\n        style: styles.cell,\n        children: item.tamano_Paquete\n      }), _jsx(Text, {\n        style: styles.cell,\n        children: item.costo\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Lista de Ingredientes\"\n    }), _jsx(FlatList, {\n      data: ingredientes,\n      renderItem: renderizarItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    })]\n  });\n};\nexport default IngredientListScreen;","map":{"version":3,"names":["React","useState","useEffect","View","FlatList","Text","TouchableOpacity","fetchIngredientes","styles","jsx","_jsx","jsxs","_jsxs","IngredientListScreen","_useState","_useState2","_slicedToArray","ingredientes","setIngredientes","obtenerIngredientes","_ref","_asyncToGenerator","ingredientesData","error","console","apply","arguments","renderizarItem","_ref2","item","style","row","children","cell","nombre","unidad_Medida","tamano_Paquete","costo","container","title","data","renderItem","keyExtractor","id","toString"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/views/IngredientListScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, FlatList, Text, TouchableOpacity } from 'react-native';\r\nimport { fetchIngredientes } from '../controllers/IngredientController';\r\nimport styles from '../styles/styles';\r\n\r\nconst IngredientListScreen = () => {\r\n  const [ingredientes, setIngredientes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    obtenerIngredientes();\r\n  }, []);\r\n\r\n  const obtenerIngredientes = async () => {\r\n    try {\r\n      const ingredientesData = await fetchIngredientes();\r\n      setIngredientes(ingredientesData);\r\n    } catch (error) {\r\n      console.error('Error al obtener los ingredientes:', error);\r\n    }\r\n  };\r\n\r\n  const renderizarItem = ({ item }) => (\r\n    <TouchableOpacity style={styles.row}>\r\n      <Text style={styles.cell}>{item.nombre}</Text>\r\n      <Text style={styles.cell}>{item.unidad_Medida}</Text>\r\n      <Text style={styles.cell}>{item.tamano_Paquete}</Text>\r\n      <Text style={styles.cell}>{item.costo}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n  \r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Lista de Ingredientes</Text>\r\n      <FlatList\r\n        data={ingredientes}\r\n        renderItem={renderizarItem}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default IngredientListScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAEnD,SAASC,iBAAiB;AAC1B,OAAOC,MAAM;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtC,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EACjC,IAAAC,SAAA,GAAwCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEpCb,SAAS,CAAC,YAAM;IACdiB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,mBAAmB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACtC,IAAI;QACF,IAAMC,gBAAgB,SAASf,iBAAiB,CAAC,CAAC;QAClDW,eAAe,CAACI,gBAAgB,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF,CAAC;IAAA,gBAPKJ,mBAAmBA,CAAA;MAAA,OAAAC,IAAA,CAAAK,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOxB;EAED,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAC5BjB,KAAA,CAACN,gBAAgB;MAACwB,KAAK,EAAEtB,MAAM,CAACuB,GAAI;MAAAC,QAAA,GAClCtB,IAAA,CAACL,IAAI;QAACyB,KAAK,EAAEtB,MAAM,CAACyB,IAAK;QAAAD,QAAA,EAAEH,IAAI,CAACK;MAAM,CAAO,CAAC,EAC9CxB,IAAA,CAACL,IAAI;QAACyB,KAAK,EAAEtB,MAAM,CAACyB,IAAK;QAAAD,QAAA,EAAEH,IAAI,CAACM;MAAa,CAAO,CAAC,EACrDzB,IAAA,CAACL,IAAI;QAACyB,KAAK,EAAEtB,MAAM,CAACyB,IAAK;QAAAD,QAAA,EAAEH,IAAI,CAACO;MAAc,CAAO,CAAC,EACtD1B,IAAA,CAACL,IAAI;QAACyB,KAAK,EAAEtB,MAAM,CAACyB,IAAK;QAAAD,QAAA,EAAEH,IAAI,CAACQ;MAAK,CAAO,CAAC;IAAA,CAC7B,CAAC;EAAA,CACpB;EAGD,OACEzB,KAAA,CAACT,IAAI;IAAC2B,KAAK,EAAEtB,MAAM,CAAC8B,SAAU;IAAAN,QAAA,GAC5BtB,IAAA,CAACL,IAAI;MAACyB,KAAK,EAAEtB,MAAM,CAAC+B,KAAM;MAAAP,QAAA,EAAC;IAAqB,CAAM,CAAC,EACvDtB,IAAA,CAACN,QAAQ;MACPoC,IAAI,EAAEvB,YAAa;MACnBwB,UAAU,EAAEd,cAAe;MAC3Be,YAAY,EAAE,SAAAA,aAACb,IAAI;QAAA,OAAKA,IAAI,CAACc,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAA;IAAC,CAC5C,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,eAAe/B,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}