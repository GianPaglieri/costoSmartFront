{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from 'axios';\nimport styles from \"../styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar IngredientListScreen = function IngredientListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    ingredientes = _useState2[0],\n    setIngredientes = _useState2[1];\n  useEffect(function () {\n    fetchIngredientes();\n  }, []);\n  var fetchIngredientes = function fetchIngredientes() {\n    var response;\n    return _regeneratorRuntime.async(function fetchIngredientes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log('Fetching ingredientes...');\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get('http://localhost:3000/ingredientes'));\n          case 4:\n            response = _context.sent;\n            console.log('Ingredientes recibidos:', response.data);\n            setIngredientes(response.data);\n            _context.next = 12;\n            break;\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error al obtener los ingredientes:', _context.t0);\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n  var renderIngrediente = function renderIngrediente(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: [styles.cell, styles.header],\n        children: item.Nombre\n      }), _jsxs(Text, {\n        style: styles.cell,\n        children: [\"Unidad de medida: \", item.Unidad_Medida]\n      }), _jsxs(Text, {\n        style: styles.cell,\n        children: [\"Tama\\xF1o del paquete: \", item.Tamano_Paquete]\n      }), _jsxs(Text, {\n        style: styles.cell,\n        children: [\"Costo: $\", item.Costo]\n      })]\n    });\n  };\n  console.log('Ingredientes en el estado:', ingredientes);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Lista de Ingredientes\"\n    }), _jsxs(View, {\n      style: styles.table,\n      children: [_jsxs(View, {\n        style: styles.row,\n        children: [_jsx(Text, {\n          style: [styles.cell, styles.header],\n          children: \"Nombre\"\n        }), _jsx(Text, {\n          style: [styles.cell, styles.header],\n          children: \"Unidad de medida\"\n        }), _jsx(Text, {\n          style: [styles.cell, styles.header],\n          children: \"Tama\\xF1o del paquete\"\n        }), _jsx(Text, {\n          style: [styles.cell, styles.header],\n          children: \"Costo\"\n        })]\n      }), _jsx(FlatList, {\n        data: ingredientes,\n        renderItem: renderIngrediente,\n        keyExtractor: function keyExtractor(item) {\n          return item.ID.toString();\n        }\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.addButton,\n      onPress: function onPress() {\n        return navigation.navigate('IngredientForm');\n      },\n      children: _jsx(Text, {\n        style: styles.addButtonText,\n        children: \"Agregar Ingrediente\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.addButton,\n      onPress: function onPress() {\n        return navigation.navigate('TortasScreen');\n      },\n      children: _jsx(Text, {\n        style: styles.addButtonText,\n        children: \"Agregar Torta\"\n      })\n    })]\n  });\n};\nexport default IngredientListScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","TouchableOpacity","axios","styles","jsx","_jsx","jsxs","_jsxs","IngredientListScreen","_ref","navigation","_useState","_useState2","_slicedToArray","ingredientes","setIngredientes","fetchIngredientes","response","_regeneratorRuntime","async","fetchIngredientes$","_context","prev","next","console","log","awrap","get","sent","data","t0","error","stop","Promise","renderIngrediente","_ref2","item","style","row","children","cell","header","Nombre","Unidad_Medida","Tamano_Paquete","Costo","container","title","table","renderItem","keyExtractor","ID","toString","addButton","onPress","navigate","addButtonText"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/screens/IngredientListScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, TouchableOpacity } from 'react-native';\r\nimport axios from 'axios';\r\nimport styles from '../styles';\r\n\r\nconst IngredientListScreen = ({ navigation }) => {\r\n  const [ingredientes, setIngredientes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchIngredientes();\r\n  }, []);\r\n\r\n  const fetchIngredientes = async () => {\r\n    try {\r\n      console.log('Fetching ingredientes...');\r\n      const response = await axios.get('http://localhost:3000/ingredientes');\r\n      console.log('Ingredientes recibidos:', response.data);\r\n      setIngredientes(response.data);\r\n    } catch (error) {\r\n      console.error('Error al obtener los ingredientes:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const renderIngrediente = ({ item }) => (\r\n    <View style={styles.row}>\r\n      <Text style={[styles.cell, styles.header]}>{item.Nombre}</Text>\r\n      <Text style={styles.cell}>Unidad de medida: {item.Unidad_Medida}</Text>\r\n      <Text style={styles.cell}>Tamaño del paquete: {item.Tamano_Paquete}</Text>\r\n      <Text style={styles.cell}>Costo: ${item.Costo}</Text>\r\n    </View>\r\n  );\r\n  \r\n\r\n  console.log('Ingredientes en el estado:', ingredientes);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Lista de Ingredientes</Text>\r\n      <View style={styles.table}>\r\n        <View style={styles.row}>\r\n          <Text style={[styles.cell, styles.header]}>Nombre</Text>\r\n          <Text style={[styles.cell, styles.header]}>Unidad de medida</Text>\r\n          <Text style={[styles.cell, styles.header]}>Tamaño del paquete</Text>\r\n          <Text style={[styles.cell, styles.header]}>Costo</Text>\r\n        </View>\r\n        <FlatList\r\n          data={ingredientes}\r\n          renderItem={renderIngrediente}\r\n          keyExtractor={(item) => item.ID.toString()}\r\n        />\r\n      </View>\r\n      <TouchableOpacity\r\n        style={styles.addButton}\r\n        onPress={() => navigation.navigate('IngredientForm')}\r\n      >\r\n        <Text style={styles.addButtonText}>Agregar Ingrediente</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        style={styles.addButton}\r\n        onPress={() => navigation.navigate('TortasScreen')}\r\n      >\r\n        <Text style={styles.addButtonText}>Agregar Torta</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default IngredientListScreen;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}