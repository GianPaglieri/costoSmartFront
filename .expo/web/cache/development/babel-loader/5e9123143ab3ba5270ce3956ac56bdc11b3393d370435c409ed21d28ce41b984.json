{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nvar baseUrl = 'http://localhost:3000';\nexport var registrarVenta = function () {\n  var _ref = _asyncToGenerator(function* (idTorta) {\n    try {\n      var response = yield axios.post(baseUrl + \"/ventas\", {\n        id_torta: idTorta\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error al registrar la venta:', error);\n      throw error;\n    }\n  });\n  return function registrarVenta(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.obtenerCantidadVentas = function () {\n  var _ref2 = _asyncToGenerator(function* (req, res) {\n    try {\n      var response = yield axios.get(baseUrl + \"/ventas/cantidad\");\n      var cantidadVentas = response.data.cantidadVentas;\n      res.json({\n        cantidadVentas: cantidadVentas\n      });\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({\n        mensaje: 'Error al obtener la cantidad de ventas.'\n      });\n    }\n  });\n  return function (_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","baseUrl","registrarVenta","_ref","_asyncToGenerator","idTorta","response","post","id_torta","data","error","console","_x","apply","arguments","exports","obtenerCantidadVentas","_ref2","req","res","get","cantidadVentas","json","status","mensaje","_x2","_x3"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/controllers/VentaController.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:3000';\r\n\r\nexport const registrarVenta = async (idTorta) => {\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/ventas`, { id_torta: idTorta });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al registrar la venta:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexports.obtenerCantidadVentas = async (req, res) => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/ventas/cantidad`);\r\n    const cantidadVentas = response.data.cantidadVentas;\r\n    res.json({ cantidadVentas });\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ mensaje: 'Error al obtener la cantidad de ventas.' });\r\n  }\r\n};\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,OAAO,GAAG,uBAAuB;AAEvC,OAAO,IAAMC,cAAc;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,OAAO,EAAK;IAC/C,IAAI;MACF,IAAMC,QAAQ,SAASN,KAAK,CAACO,IAAI,CAAIN,OAAO,cAAW;QAAEO,QAAQ,EAAEH;MAAQ,CAAC,CAAC;MAC7E,OAAOC,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBARYR,cAAcA,CAAAU,EAAA;IAAA,OAAAT,IAAA,CAAAU,KAAA,OAAAC,SAAA;EAAA;AAAA,GAQ1B;AAEDC,OAAO,CAACC,qBAAqB;EAAA,IAAAC,KAAA,GAAAb,iBAAA,CAAG,WAAOc,GAAG,EAAEC,GAAG,EAAK;IAClD,IAAI;MACF,IAAMb,QAAQ,SAASN,KAAK,CAACoB,GAAG,CAAInB,OAAO,qBAAkB,CAAC;MAC9D,IAAMoB,cAAc,GAAGf,QAAQ,CAACG,IAAI,CAACY,cAAc;MACnDF,GAAG,CAACG,IAAI,CAAC;QAAED,cAAc,EAAdA;MAAe,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBS,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACD,IAAI,CAAC;QAAEE,OAAO,EAAE;MAA0C,CAAC,CAAC;IAC9E;EACF,CAAC;EAAA,iBAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAT,KAAA,CAAAJ,KAAA,OAAAC,SAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}