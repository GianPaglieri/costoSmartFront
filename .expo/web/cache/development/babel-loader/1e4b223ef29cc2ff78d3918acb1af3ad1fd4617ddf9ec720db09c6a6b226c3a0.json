{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar axios = require('axios');\nvar baseUrl = 'http://localhost:3000';\nvar registrarVenta = function () {\n  var _ref = _asyncToGenerator(function* (idTorta) {\n    try {\n      var response = yield axios.post(baseUrl + \"/ventas\", {\n        id_torta: idTorta\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error al registrar la venta:', error);\n      throw error;\n    }\n  });\n  return function registrarVenta(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar obtenerCantidadVentas = function () {\n  var _ref2 = _asyncToGenerator(function* (req, res) {\n    try {\n      var response = yield axios.get(baseUrl + \"/ventas/cantidad\");\n      var cantidadVentas = response.data.cantidadVentas;\n      setCantidadVentas(cantidadVentas);\n      res.json({\n        cantidadVentas: cantidadVentas\n      });\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({\n        mensaje: 'Error al obtener la cantidad de ventas.'\n      });\n    }\n  });\n  return function obtenerCantidadVentas(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  registrarVenta: registrarVenta,\n  obtenerCantidadVentas: obtenerCantidadVentas\n};","map":{"version":3,"names":["axios","require","baseUrl","registrarVenta","_ref","_asyncToGenerator","idTorta","response","post","id_torta","data","error","console","_x","apply","arguments","obtenerCantidadVentas","_ref2","req","res","get","cantidadVentas","setCantidadVentas","json","status","mensaje","_x2","_x3","module","exports"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/controllers/VentaController.js"],"sourcesContent":["const axios = require('axios');\r\n\r\nconst baseUrl = 'http://localhost:3000';\r\n\r\nconst registrarVenta = async (idTorta) => {\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/ventas`, { id_torta: idTorta });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al registrar la venta:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst obtenerCantidadVentas = async (req, res) => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/ventas/cantidad`);\r\n    const cantidadVentas = response.data.cantidadVentas;\r\n    setCantidadVentas(cantidadVentas);\r\n   \r\n    res.json({ cantidadVentas });\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ mensaje: 'Error al obtener la cantidad de ventas.' });\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  registrarVenta,\r\n  obtenerCantidadVentas\r\n};\r\n\r\n"],"mappings":";AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE9B,IAAMC,OAAO,GAAG,uBAAuB;AAEvC,IAAMC,cAAc;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,OAAO,EAAK;IACxC,IAAI;MACF,IAAMC,QAAQ,SAASP,KAAK,CAACQ,IAAI,CAAIN,OAAO,cAAW;QAAEO,QAAQ,EAAEH;MAAQ,CAAC,CAAC;MAC7E,OAAOC,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBARKR,cAAcA,CAAAU,EAAA;IAAA,OAAAT,IAAA,CAAAU,KAAA,OAAAC,SAAA;EAAA;AAAA,GAQnB;AAED,IAAMC,qBAAqB;EAAA,IAAAC,KAAA,GAAAZ,iBAAA,CAAG,WAAOa,GAAG,EAAEC,GAAG,EAAK;IAChD,IAAI;MACF,IAAMZ,QAAQ,SAASP,KAAK,CAACoB,GAAG,CAAIlB,OAAO,qBAAkB,CAAC;MAC9D,IAAMmB,cAAc,GAAGd,QAAQ,CAACG,IAAI,CAACW,cAAc;MACnDC,iBAAiB,CAACD,cAAc,CAAC;MAEjCF,GAAG,CAACI,IAAI,CAAC;QAAEF,cAAc,EAAdA;MAAe,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBQ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACD,IAAI,CAAC;QAAEE,OAAO,EAAE;MAA0C,CAAC,CAAC;IAC9E;EACF,CAAC;EAAA,gBAXKT,qBAAqBA,CAAAU,GAAA,EAAAC,GAAA;IAAA,OAAAV,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAW1B;AAEDa,MAAM,CAACC,OAAO,GAAG;EACf1B,cAAc,EAAdA,cAAc;EACda,qBAAqB,EAArBA;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}