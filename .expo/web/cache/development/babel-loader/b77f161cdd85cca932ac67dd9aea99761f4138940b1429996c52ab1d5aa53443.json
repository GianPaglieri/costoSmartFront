{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TortasScreen = function TortasScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tortas = _useState2[0],\n    setTortas = _useState2[1];\n  useEffect(function () {\n    fetchTortas();\n  }, []);\n  var fetchTortas = function fetchTortas() {\n    var response, data;\n    return _regeneratorRuntime.async(function fetchTortas$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:3000/recetas'));\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n          case 6:\n            data = _context.sent;\n            setTortas(data);\n            _context.next = 13;\n            break;\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error al obtener las tortas:', _context.t0);\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n  return _jsxs(\"div\", {\n    children: [_jsx(\"h1\", {\n      children: \"Tortas\"\n    }), _jsxs(\"table\", {\n      children: [_jsx(\"thead\", {\n        children: _jsxs(\"tr\", {\n          children: [_jsx(\"th\", {\n            children: \"ID\"\n          }), _jsx(\"th\", {\n            children: \"Nombre\"\n          }), _jsx(\"th\", {\n            children: \"Precio\"\n          })]\n        })\n      }), _jsx(\"tbody\", {\n        children: tortas.map(function (torta) {\n          return _jsxs(\"tr\", {\n            children: [_jsx(\"td\", {\n              children: torta.id\n            }), _jsx(\"td\", {\n              children: torta.nombre\n            }), _jsx(\"td\", {\n              children: torta.precio\n            })]\n          }, torta.id);\n        })\n      })]\n    })]\n  });\n};\nexport default TortasScreen;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","TortasScreen","_useState","_useState2","_slicedToArray","tortas","setTortas","fetchTortas","response","data","_regeneratorRuntime","async","fetchTortas$","_context","prev","next","awrap","fetch","sent","json","t0","console","error","stop","Promise","children","map","torta","id","nombre","precio"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/screens/TortasScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TortasScreen = () => {\r\n  const [tortas, setTortas] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTortas();\r\n  }, []);\r\n\r\n  const fetchTortas = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/recetas');\r\n      const data = await response.json();\r\n      setTortas(data);\r\n    } catch (error) {\r\n      console.error('Error al obtener las tortas:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Tortas</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Nombre</th>\r\n            <th>Precio</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tortas.map((torta) => (\r\n            <tr key={torta.id}>\r\n              <td>{torta.id}</td>\r\n              <td>{torta.nombre}</td>\r\n              <td>{torta.precio}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TortasScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAA4BP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExBP,SAAS,CAAC,YAAM;IACdW,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,WAAW,GAAG,SAAdA,WAAWA,CAAA;IAAA,IAAAC,QAAA,EAAAC,IAAA;IAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,aAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAE,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CAEUC,KAAK,CAAC,+BAA+B,CAAC;UAAA;YAAvDT,QAAQ,GAAAK,QAAA,CAAAK,IAAA;YAAAL,QAAA,CAAAE,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CACKR,QAAQ,CAACW,IAAI,CAAC,CAAC;UAAA;YAA5BV,IAAI,GAAAI,QAAA,CAAAK,IAAA;YACVZ,SAAS,CAACG,IAAI,CAAC;YAACI,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAO,EAAA,GAAAP,QAAA;YAEhBQ,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAAT,QAAA,CAAAO,EAAO,CAAC;UAAC;UAAA;YAAA,OAAAP,QAAA,CAAAU,IAAA;QAAA;MAAA;IAAA,0BAAAC,OAAA;EAAA,CAExD;EAED,OACExB,KAAA;IAAAyB,QAAA,GACE3B,IAAA;MAAA2B,QAAA,EAAI;IAAM,CAAI,CAAC,EACfzB,KAAA;MAAAyB,QAAA,GACE3B,IAAA;QAAA2B,QAAA,EACEzB,KAAA;UAAAyB,QAAA,GACE3B,IAAA;YAAA2B,QAAA,EAAI;UAAE,CAAI,CAAC,EACX3B,IAAA;YAAA2B,QAAA,EAAI;UAAM,CAAI,CAAC,EACf3B,IAAA;YAAA2B,QAAA,EAAI;UAAM,CAAI,CAAC;QAAA,CACb;MAAC,CACA,CAAC,EACR3B,IAAA;QAAA2B,QAAA,EACGpB,MAAM,CAACqB,GAAG,CAAC,UAACC,KAAK;UAAA,OAChB3B,KAAA;YAAAyB,QAAA,GACE3B,IAAA;cAAA2B,QAAA,EAAKE,KAAK,CAACC;YAAE,CAAK,CAAC,EACnB9B,IAAA;cAAA2B,QAAA,EAAKE,KAAK,CAACE;YAAM,CAAK,CAAC,EACvB/B,IAAA;cAAA2B,QAAA,EAAKE,KAAK,CAACG;YAAM,CAAK,CAAC;UAAA,GAHhBH,KAAK,CAACC,EAIX,CAAC;QAAA,CACN;MAAC,CACG,CAAC;IAAA,CACH,CAAC;EAAA,CACL,CAAC;AAEV,CAAC;AAED,eAAe3B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}