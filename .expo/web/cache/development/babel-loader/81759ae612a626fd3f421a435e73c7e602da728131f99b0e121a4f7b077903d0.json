{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { agregarIngrediente } from \"../controllers/IngredientController\";\nimport styles from \"../styles/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar IngredientFormScreen = function IngredientFormScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    nombre = _useState2[0],\n    setNombre = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    unidadMedida = _useState4[0],\n    setUnidadMedida = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    tamanoPaquete = _useState6[0],\n    setTamanoPaquete = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    costo = _useState8[0],\n    setCosto = _useState8[1];\n  var agregarIngredienteData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var ingredientData = {\n          nombre: nombre,\n          unidad_Medida: unidadMedida,\n          tamano_Paquete: tamanoPaquete,\n          costo: costo\n        };\n        yield agregarIngrediente(ingredientData);\n        navigation.navigate('IngredientList');\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function agregarIngredienteData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Agregar Ingrediente\"\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Nombre:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return setNombre(text);\n        },\n        value: nombre\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Unidad de medidas:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return setUnidadMedida(text);\n        },\n        value: unidadMedida\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Tama\\xF1o del paquete:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return setTamanoPaquete(text);\n        },\n        value: tamanoPaquete\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Costo:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return setCosto(text);\n        },\n        value: costo,\n        keyboardType: \"numeric\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: agregarIngredienteData,\n        children: _jsx(Text, {\n          style: styles.addButtonText,\n          children: \"Agregar\"\n        })\n      })]\n    })]\n  });\n};\nexport default IngredientFormScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","agregarIngrediente","styles","jsx","_jsx","jsxs","_jsxs","IngredientFormScreen","_ref","navigation","_useState","_useState2","_slicedToArray","nombre","setNombre","_useState3","_useState4","unidadMedida","setUnidadMedida","_useState5","_useState6","tamanoPaquete","setTamanoPaquete","_useState7","_useState8","costo","setCosto","agregarIngredienteData","_ref2","_asyncToGenerator","ingredientData","unidad_Medida","tamano_Paquete","navigate","error","console","apply","arguments","style","container","children","title","form","label","input","onChangeText","text","value","keyboardType","addButton","onPress","addButtonText"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/views/IngredientFormScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity } from 'react-native';\r\nimport { agregarIngrediente } from '../controllers/IngredientController';\r\nimport styles from '../styles/styles';\r\n\r\nconst IngredientFormScreen = ({ navigation }) => {\r\n  const [nombre, setNombre] = useState('');\r\n  const [unidadMedida, setUnidadMedida] = useState('');\r\n  const [tamanoPaquete, setTamanoPaquete] = useState('');\r\n  const [costo, setCosto] = useState('');\r\n\r\n  const agregarIngredienteData = async () => {\r\n    try {\r\n      const ingredientData = {\r\n        nombre,\r\n        unidad_Medida: unidadMedida,\r\n        tamano_Paquete: tamanoPaquete,\r\n        costo\r\n      };\r\n      await agregarIngrediente(ingredientData);\r\n      navigation.navigate('IngredientList');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Agregar Ingrediente</Text>\r\n      <View style={styles.form}>\r\n        <Text style={styles.label}>Nombre:</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          onChangeText={(text) => setNombre(text)}\r\n          value={nombre}\r\n        />\r\n        <Text style={styles.label}>Unidad de medidas:</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          onChangeText={(text) => setUnidadMedida(text)}\r\n          value={unidadMedida}\r\n        />\r\n        <Text style={styles.label}>Tama√±o del paquete:</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          onChangeText={(text) => setTamanoPaquete(text)}\r\n          value={tamanoPaquete}\r\n        />\r\n        <Text style={styles.label}>Costo:</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          onChangeText={(text) => setCosto(text)}\r\n          value={costo}\r\n          keyboardType=\"numeric\"\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.addButton}\r\n          onPress={agregarIngredienteData}\r\n        >\r\n          <Text style={styles.addButtonText}>Agregar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default IngredientFormScreen;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}