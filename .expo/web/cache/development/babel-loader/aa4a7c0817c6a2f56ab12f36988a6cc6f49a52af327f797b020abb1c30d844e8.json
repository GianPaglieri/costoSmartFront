{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from \"../views/homeScreen\";\nimport IngredientListScreen from \"../views/IngredientListScreen\";\nimport TortasScreen from \"../views/TortasScreen\";\nimport NewIngredientScreen from \"../views/NewIngredientScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar Stack = createStackNavigator();\nvar IngredientStack = function IngredientStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"IngredientList\",\n      component: IngredientListScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NewIngredient\",\n      component: NewIngredientScreen,\n      options: {\n        title: 'Nuevo Ingrediente'\n      }\n    })]\n  });\n};\nvar MenuButton = function MenuButton() {\n  var navigation = useNavigation();\n  var openDrawer = function openDrawer() {\n    navigation.openDrawer();\n  };\n  return _jsx(TouchableOpacity, {\n    style: styles.menuButton,\n    onPress: openDrawer,\n    children: _jsx(Ionicons, {\n      name: \"menu\",\n      size: 30,\n      color: \"black\"\n    })\n  });\n};\nvar TabNavigator = function TabNavigator() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isExpanded = _useState2[0],\n    setExpanded = _useState2[1];\n  var navigation = useNavigation();\n  var toggleMenu = function toggleMenu() {\n    setExpanded(!isExpanded);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      style: [styles.menu, isExpanded ? styles.menuExpanded : null],\n      onPress: toggleMenu,\n      activeOpacity: 0.7,\n      children: [_jsx(Ionicons, {\n        name: isExpanded ? 'close' : 'menu',\n        size: 30,\n        color: \"black\"\n      }), isExpanded && _jsxs(View, {\n        style: styles.menuItems,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Overview\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Summary\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Tortas');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Tortas\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('IngredientStack');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Ingredientes\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Recetas\"\n          })\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.content,\n      children: _jsxs(Drawer.Navigator, {\n        drawerContent: function drawerContent() {\n          return null;\n        },\n        drawerStyle: styles.drawer,\n        overlayColor: \"transparent\",\n        children: [_jsx(Drawer.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Drawer.Screen, {\n          name: \"Ingredientes\",\n          component: IngredientStack\n        }), _jsx(Drawer.Screen, {\n          name: \"Tortas\",\n          component: TortasScreen\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  menu: {\n    width: 60,\n    backgroundColor: '#86C997',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transitionProperty: 'width',\n    transitionDuration: '0.3s',\n    zIndex: 1\n  },\n  menuExpanded: {\n    width: 120\n  },\n  menuItems: {\n    marginTop: 10\n  },\n  menuItem: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 10\n  },\n  content: {\n    flex: 1\n  },\n  drawer: {\n    backgroundColor: '#86C997',\n    width: 200\n  },\n  menuButton: {\n    marginLeft: 10\n  }\n});\nexport default TabNavigator;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","StyleSheet","Text","useNavigation","Ionicons","createDrawerNavigator","createStackNavigator","HomeScreen","IngredientListScreen","TortasScreen","NewIngredientScreen","jsx","_jsx","jsxs","_jsxs","Drawer","Stack","IngredientStack","Navigator","children","Screen","name","component","options","headerShown","title","MenuButton","navigation","openDrawer","style","styles","menuButton","onPress","size","color","TabNavigator","_useState","_useState2","_slicedToArray","isExpanded","setExpanded","toggleMenu","container","menu","menuExpanded","activeOpacity","menuItems","navigate","menuItem","content","drawerContent","drawerStyle","drawer","overlayColor","create","flex","flexDirection","width","backgroundColor","alignItems","justifyContent","transitionProperty","transitionDuration","zIndex","marginTop","fontSize","fontWeight","marginBottom","marginLeft"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/components/Navigation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport HomeScreen from '../views/homeScreen';\r\nimport IngredientListScreen from '../views/IngredientListScreen';\r\nimport TortasScreen from '../views/TortasScreen';\r\nimport NewIngredientScreen from '../views/NewIngredientScreen';\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nconst IngredientStack = () => (\r\n  <Stack.Navigator>\r\n    <Stack.Screen\r\n      name=\"IngredientList\"\r\n      component={IngredientListScreen}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <Stack.Screen\r\n      name=\"NewIngredient\"\r\n      component={NewIngredientScreen}\r\n      options={{ title: 'Nuevo Ingrediente' }}\r\n    />\r\n  </Stack.Navigator>\r\n);\r\n\r\nconst MenuButton = () => {\r\n  const navigation = useNavigation();\r\n\r\n  const openDrawer = () => {\r\n    navigation.openDrawer();\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity style={styles.menuButton} onPress={openDrawer}>\r\n      <Ionicons name=\"menu\" size={30} color=\"black\" />\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst TabNavigator = () => {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const toggleMenu = () => {\r\n    setExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={[styles.menu, isExpanded ? styles.menuExpanded : null]}\r\n        onPress={toggleMenu}\r\n        activeOpacity={0.7}\r\n      >\r\n        <Ionicons name={isExpanded ? 'close' : 'menu'} size={30} color=\"black\" />\r\n        {isExpanded && (\r\n          <View style={styles.menuItems}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Overview</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Summary</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Tortas');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Tortas</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('IngredientStack');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Ingredientes</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Recetas</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </TouchableOpacity>\r\n      <View style={styles.content}>\r\n        <Drawer.Navigator\r\n          drawerContent={() => null}\r\n          drawerStyle={styles.drawer}\r\n          overlayColor=\"transparent\"\r\n        >\r\n          <Drawer.Screen name=\"Home\" component={HomeScreen} />\r\n          <Drawer.Screen name=\"Ingredientes\" component={IngredientStack} />\r\n          <Drawer.Screen name=\"Tortas\" component={TortasScreen} />\r\n        </Drawer.Navigator>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  menu: {\r\n    width: 60,\r\n    backgroundColor: '#86C997',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    transitionProperty: 'width',\r\n    transitionDuration: '0.3s',\r\n    zIndex: 1,\r\n  },\r\n  menuExpanded: {\r\n    width: 120,\r\n  },\r\n  menuItems: {\r\n    marginTop: 10,\r\n  },\r\n  menuItem: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    marginBottom: 10,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  drawer: {\r\n    backgroundColor: '#86C997',\r\n    width: 200,\r\n  },\r\n  menuButton: {\r\n    marginLeft: 10,\r\n  },\r\n});\r\n\r\nexport default TabNavigator;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}