{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport HomeScreen from \"../views/homeScreen\";\nimport IngredientListScreen from \"../views/IngredientListScreen\";\nimport TortasScreen from \"../views/TortasScreen\";\nimport NewIngredientScreen from \"../views/NewIngredientScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar AppNavigator = function AppNavigator() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isExpanded = _useState2[0],\n    setExpanded = _useState2[1];\n  var navigation = useNavigation();\n  var toggleMenu = function toggleMenu() {\n    setExpanded(!isExpanded);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      drawerStyle: styles.drawerStyle,\n      drawerContentOptions: {\n        labelStyle: styles.drawerLabel\n      },\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"IngredientStack\",\n        component: IngredientListScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"Tortas\",\n        component: TortasScreen\n      }), _jsx(Drawer.Screen, {\n        name: \"NewIngredient\",\n        component: NewIngredientScreen\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  menu: {\n    width: 80,\n    backgroundColor: '#86C997',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transitionProperty: 'width',\n    transitionDuration: '0.3s',\n    zIndex: 1\n  },\n  menuExpanded: {\n    width: 120\n  },\n  menuItems: {\n    marginTop: 10\n  },\n  menuItem: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 10\n  },\n  drawerStyle: {\n    backgroundColor: '#bbe4fc',\n    width: 250\n  },\n  drawerLabel: {\n    fontFamily: 'Source Sans 3'\n  }\n});\nexport default AppNavigator;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","StyleSheet","Text","useNavigation","Ionicons","createDrawerNavigator","HomeScreen","IngredientListScreen","TortasScreen","NewIngredientScreen","jsx","_jsx","jsxs","_jsxs","Drawer","AppNavigator","_useState","_useState2","_slicedToArray","isExpanded","setExpanded","navigation","toggleMenu","style","styles","container","children","Navigator","initialRouteName","drawerStyle","drawerContentOptions","labelStyle","drawerLabel","Screen","name","component","create","flex","flexDirection","menu","width","backgroundColor","alignItems","justifyContent","transitionProperty","transitionDuration","zIndex","menuExpanded","menuItems","marginTop","menuItem","fontSize","fontWeight","color","marginBottom","fontFamily"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/components/Navigation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport HomeScreen from '../views/homeScreen';\r\nimport IngredientListScreen from '../views/IngredientListScreen';\r\nimport TortasScreen from '../views/TortasScreen';\r\nimport NewIngredientScreen from '../views/NewIngredientScreen';\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst AppNavigator = () => {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const toggleMenu = () => {\r\n    setExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      \r\n      <Drawer.Navigator\r\n        initialRouteName=\"Home\"\r\n        drawerStyle={styles.drawerStyle}\r\n        drawerContentOptions={{\r\n          labelStyle: styles.drawerLabel,\r\n        }}\r\n      >\r\n        <Drawer.Screen name=\"Home\" component={HomeScreen} />\r\n        <Drawer.Screen name=\"IngredientStack\" component={IngredientListScreen} />\r\n        <Drawer.Screen name=\"Tortas\" component={TortasScreen} />\r\n        <Drawer.Screen name=\"NewIngredient\" component={NewIngredientScreen} />\r\n      </Drawer.Navigator>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  menu: {\r\n    width: 80,\r\n    backgroundColor: '#86C997',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    transitionProperty: 'width',\r\n    transitionDuration: '0.3s',\r\n    zIndex: 1,\r\n  },\r\n  menuExpanded: {\r\n    width: 120,\r\n  },\r\n  menuItems: {\r\n    marginTop: 10,\r\n  },\r\n  menuItem: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    marginBottom: 10,\r\n  },\r\n  drawerStyle: {\r\n    backgroundColor: '#bbe4fc',\r\n    width: 250,\r\n  },\r\n  drawerLabel: {\r\n    fontFamily: 'Source Sans 3',\r\n  },\r\n});\r\n\r\nexport default AppNavigator;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,qBAAqB,QAAQ,0BAA0B;AAEhE,OAAOC,UAAU;AACjB,OAAOC,oBAAoB;AAC3B,OAAOC,YAAY;AACnB,OAAOC,mBAAmB;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/D,IAAMC,MAAM,GAAGT,qBAAqB,CAAC,CAAC;AAEtC,IAAMU,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAAkClB,QAAQ,CAAC,KAAK,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,UAAU,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC9B,IAAMI,UAAU,GAAGlB,aAAa,CAAC,CAAC;EAElC,IAAMmB,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBF,WAAW,CAAC,CAACD,UAAU,CAAC;EAC1B,CAAC;EAED,OACER,IAAA,CAACZ,IAAI;IAACwB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAE5Bb,KAAA,CAACC,MAAM,CAACa,SAAS;MACfC,gBAAgB,EAAC,MAAM;MACvBC,WAAW,EAAEL,MAAM,CAACK,WAAY;MAChCC,oBAAoB,EAAE;QACpBC,UAAU,EAAEP,MAAM,CAACQ;MACrB,CAAE;MAAAN,QAAA,GAEFf,IAAA,CAACG,MAAM,CAACmB,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAE7B;MAAW,CAAE,CAAC,EACpDK,IAAA,CAACG,MAAM,CAACmB,MAAM;QAACC,IAAI,EAAC,iBAAiB;QAACC,SAAS,EAAE5B;MAAqB,CAAE,CAAC,EACzEI,IAAA,CAACG,MAAM,CAACmB,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAE3B;MAAa,CAAE,CAAC,EACxDG,IAAA,CAACG,MAAM,CAACmB,MAAM;QAACC,IAAI,EAAC,eAAe;QAACC,SAAS,EAAE1B;MAAoB,CAAE,CAAC;IAAA,CACtD;EAAC,CACf,CAAC;AAEX,CAAC;AAED,IAAMe,MAAM,GAAGvB,UAAU,CAACmC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE;EACjB,CAAC;EACDC,IAAI,EAAE;IACJC,KAAK,EAAE,EAAE;IACTC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,kBAAkB,EAAE,OAAO;IAC3BC,kBAAkB,EAAE,MAAM;IAC1BC,MAAM,EAAE;EACV,CAAC;EACDC,YAAY,EAAE;IACZP,KAAK,EAAE;EACT,CAAC;EACDQ,SAAS,EAAE;IACTC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,OAAO;IACdC,YAAY,EAAE;EAChB,CAAC;EACDzB,WAAW,EAAE;IACXY,eAAe,EAAE,SAAS;IAC1BD,KAAK,EAAE;EACT,CAAC;EACDR,WAAW,EAAE;IACXuB,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAexC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}