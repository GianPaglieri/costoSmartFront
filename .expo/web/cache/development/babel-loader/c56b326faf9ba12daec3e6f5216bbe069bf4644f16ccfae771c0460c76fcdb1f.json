{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { AntDesign } from '@expo/vector-icons';\nimport HomeScreen from \"../views/homeScreen\";\nimport IngredientListScreen from \"../views/IngredientListScreen\";\nimport TortasScreen from \"../views/TortasScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar AppNavigator = function AppNavigator() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isExpanded = _useState2[0],\n    setExpanded = _useState2[1];\n  var navigation = useNavigation();\n  var sidebarWidth = isExpanded ? 250 : 60;\n  var toggleMenu = function toggleMenu() {\n    setExpanded(!isExpanded);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: [styles.sidebar, {\n        width: sidebarWidth\n      }],\n      children: [_jsx(TouchableOpacity, {\n        style: styles.menu,\n        onPress: toggleMenu,\n        activeOpacity: 0.7,\n        children: _jsx(AntDesign, {\n          name: isExpanded ? 'up' : 'down',\n          size: 24,\n          color: \"black\"\n        })\n      }), isExpanded && _jsxs(View, {\n        style: styles.menuItems,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Home\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('IngredientStack');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Listado de Ingredientes\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Tortas');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Listado de Tortas\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('RecipeList');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Listado de Recetas\"\n          })\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.content,\n      children: _jsxs(Drawer.Navigator, {\n        initialRouteName: \"Home\",\n        drawerStyle: styles.drawerStyle,\n        drawerContentOptions: {\n          labelStyle: styles.drawerLabel\n        },\n        drawerType: isExpanded ? 'slide' : 'front',\n        overlayColor: \"transparent\",\n        children: [_jsx(Drawer.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Drawer.Screen, {\n          name: \"IngredientStack\",\n          component: IngredientListScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Drawer.Screen, {\n          name: \"Tortas\",\n          component: TortasScreen,\n          options: {\n            headerShown: false\n          }\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  sidebar: {\n    backgroundColor: '#bbe4fc',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    zIndex: 1\n  },\n  menu: {\n    width: '100%',\n    height: 60,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  menuText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  menuItems: {\n    flex: 1,\n    paddingTop: 20\n  },\n  menuItem: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 10,\n    paddingHorizontal: 10\n  },\n  content: {\n    flex: 1\n  },\n  drawerStyle: {\n    backgroundColor: '#bbe4fc',\n    width: '100%'\n  },\n  drawerLabel: {\n    fontFamily: 'Source Sans 3'\n  }\n});\nexport default AppNavigator;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","StyleSheet","Text","useNavigation","createDrawerNavigator","AntDesign","HomeScreen","IngredientListScreen","TortasScreen","jsx","_jsx","jsxs","_jsxs","Drawer","AppNavigator","_useState","_useState2","_slicedToArray","isExpanded","setExpanded","navigation","sidebarWidth","toggleMenu","style","styles","container","children","sidebar","width","menu","onPress","activeOpacity","name","size","color","menuItems","navigate","menuItem","content","Navigator","initialRouteName","drawerStyle","drawerContentOptions","labelStyle","drawerLabel","drawerType","overlayColor","Screen","component","options","headerShown","create","flex","flexDirection","backgroundColor","alignItems","justifyContent","zIndex","height","menuText","fontSize","fontWeight","paddingTop","marginBottom","paddingHorizontal","fontFamily"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/components/Navigation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, StyleSheet, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nimport HomeScreen from '../views/homeScreen';\r\nimport IngredientListScreen from '../views/IngredientListScreen';\r\nimport TortasScreen from '../views/TortasScreen';\r\n\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst AppNavigator = () => {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const navigation = useNavigation();\r\n  const sidebarWidth = isExpanded ? 250 : 60;\r\n\r\n  const toggleMenu = () => {\r\n    setExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={[styles.sidebar, { width: sidebarWidth }]}>\r\n        <TouchableOpacity style={styles.menu} onPress={toggleMenu} activeOpacity={0.7}>\r\n          <AntDesign name={isExpanded ? 'up' : 'down'} size={24} color=\"black\" />\r\n        </TouchableOpacity>\r\n        {isExpanded && (\r\n          <View style={styles.menuItems}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Home</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('IngredientStack');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Listado de Ingredientes</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Tortas');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Listado de Tortas</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('RecipeList');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Listado de Recetas</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </View>\r\n      <View style={styles.content}>\r\n        <Drawer.Navigator\r\n          initialRouteName=\"Home\"\r\n          drawerStyle={styles.drawerStyle}\r\n          drawerContentOptions={{\r\n            labelStyle: styles.drawerLabel,\r\n          }}\r\n          drawerType={isExpanded ? 'slide' : 'front'}\r\n          overlayColor=\"transparent\"\r\n        >\r\n          <Drawer.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\r\n          <Drawer.Screen name=\"IngredientStack\" component={IngredientListScreen} options={{ headerShown: false }} />\r\n          <Drawer.Screen name=\"Tortas\" component={TortasScreen} options={{ headerShown: false }} />\r\n        \r\n        </Drawer.Navigator>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  sidebar: {\r\n    backgroundColor: '#bbe4fc',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    zIndex: 1,\r\n  },\r\n  menu: {\r\n    width: '100%',\r\n    height: 60,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  menuText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n  },\r\n  menuItems: {\r\n    flex: 1,\r\n    paddingTop: 20,\r\n  },\r\n  menuItem: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  drawerStyle: {\r\n    backgroundColor: '#bbe4fc',\r\n    width: '100%',\r\n  },\r\n  drawerLabel: {\r\n    fontFamily: 'Source Sans 3',\r\n  },\r\n});\r\n\r\nexport default AppNavigator;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}