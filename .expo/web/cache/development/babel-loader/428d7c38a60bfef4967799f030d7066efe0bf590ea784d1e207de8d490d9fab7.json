{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport HomeScreen from \"../views/homeScreen\";\nimport IngredientListScreen from \"../views/IngredientListScreen\";\nimport TortasScreen from \"../views/TortasScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar TabNavigator = function TabNavigator() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isExpanded = _useState2[0],\n    setExpanded = _useState2[1];\n  var navigation = useNavigation();\n  var toggleMenu = function toggleMenu() {\n    setExpanded(!isExpanded);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      style: [styles.menu, isExpanded ? styles.menuExpanded : null],\n      onPress: toggleMenu,\n      activeOpacity: 0.7,\n      children: [_jsx(Ionicons, {\n        name: isExpanded ? 'close' : 'menu',\n        size: 30,\n        color: \"black\"\n      }), isExpanded && _jsxs(View, {\n        style: styles.menuItems,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Overview\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Summary\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Tortas');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Tortas\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('IngredientList');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Ingredientes\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setExpanded(false);\n            navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.menuItem,\n            children: \"Recetas\"\n          })\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.content,\n      children: _jsxs(Tab.Navigator, {\n        tabBarOptions: {\n          activeTintColor: '#86C997',\n          inactiveTintColor: 'gray',\n          labelStyle: {\n            fontSize: 12,\n            fontWeight: 'bold'\n          },\n          style: {\n            backgroundColor: '#86C997',\n            borderTopWidth: 1,\n            borderTopColor: '#ccc'\n          },\n          showIcon: true,\n          showLabel: true,\n          tabStyle: {\n            flexDirection: 'row'\n          },\n          indicatorStyle: {\n            backgroundColor: '#86C997'\n          }\n        },\n        initialRouteName: \"Home\",\n        children: [_jsx(Tab.Screen, {\n          name: \"IngredientList\",\n          component: IngredientListScreen,\n          options: {\n            tabBarLabel: 'Ingredientes',\n            tabBarIcon: function tabBarIcon(_ref) {\n              var color = _ref.color,\n                size = _ref.size;\n              return _jsx(Ionicons, {\n                name: \"list\",\n                size: size,\n                color: color\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            tabBarLabel: 'Inicio',\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var color = _ref2.color,\n                size = _ref2.size;\n              return _jsx(Ionicons, {\n                name: \"home\",\n                size: size,\n                color: color\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Tortas\",\n          component: TortasScreen,\n          options: {\n            tabBarLabel: 'Tortas',\n            tabBarIcon: function tabBarIcon(_ref3) {\n              var color = _ref3.color,\n                size = _ref3.size;\n              return _jsx(Ionicons, {\n                name: \"cake\",\n                size: size,\n                color: color\n              });\n            }\n          }\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  menu: {\n    width: 60,\n    backgroundColor: '#86C997',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transitionProperty: 'width',\n    transitionDuration: '0.3s',\n    zIndex: 1\n  },\n  menuExpanded: {\n    width: 120\n  },\n  menuItems: {\n    marginTop: 10\n  },\n  menuItem: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 10\n  },\n  content: {\n    flex: 1\n  }\n});\nexport default TabNavigator;","map":{"version":3,"names":["React","useState","createBottomTabNavigator","Ionicons","View","TouchableOpacity","StyleSheet","Text","useNavigation","HomeScreen","IngredientListScreen","TortasScreen","jsx","_jsx","jsxs","_jsxs","Tab","TabNavigator","_useState","_useState2","_slicedToArray","isExpanded","setExpanded","navigation","toggleMenu","style","styles","container","children","menu","menuExpanded","onPress","activeOpacity","name","size","color","menuItems","navigate","menuItem","content","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","fontSize","fontWeight","backgroundColor","borderTopWidth","borderTopColor","showIcon","showLabel","tabStyle","flexDirection","indicatorStyle","initialRouteName","Screen","component","options","tabBarLabel","tabBarIcon","_ref","_ref2","_ref3","create","flex","width","alignItems","justifyContent","transitionProperty","transitionDuration","zIndex","marginTop","marginBottom"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/components/Navigation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { View, TouchableOpacity, StyleSheet, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport HomeScreen from '../views/homeScreen';\r\nimport IngredientListScreen from '../views/IngredientListScreen';\r\nimport TortasScreen from '../views/TortasScreen';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst TabNavigator = () => {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const toggleMenu = () => {\r\n    setExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={[styles.menu, isExpanded ? styles.menuExpanded : null]}\r\n        onPress={toggleMenu}\r\n        activeOpacity={0.7}\r\n      >\r\n        <Ionicons name={isExpanded ? 'close' : 'menu'} size={30} color=\"black\" />\r\n        {isExpanded && (\r\n          <View style={styles.menuItems}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Overview</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Summary</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Tortas');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Tortas</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('IngredientList');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Ingredientes</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setExpanded(false);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.menuItem}>Recetas</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </TouchableOpacity>\r\n      <View style={styles.content}>\r\n        <Tab.Navigator\r\n          tabBarOptions={{\r\n            activeTintColor: '#86C997',\r\n            inactiveTintColor: 'gray',\r\n            labelStyle: {\r\n              fontSize: 12,\r\n              fontWeight: 'bold',\r\n            },\r\n            style: {\r\n              backgroundColor: '#86C997',\r\n              borderTopWidth: 1,\r\n              borderTopColor: '#ccc',\r\n            },\r\n            showIcon: true,\r\n            showLabel: true,\r\n            tabStyle: {\r\n              flexDirection: 'row',\r\n            },\r\n            indicatorStyle: {\r\n              backgroundColor: '#86C997',\r\n            },\r\n          }}\r\n          initialRouteName=\"Home\"\r\n        >\r\n          <Tab.Screen\r\n            name=\"IngredientList\"\r\n            component={IngredientListScreen}\r\n            options={{\r\n              tabBarLabel: 'Ingredientes',\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Ionicons name=\"list\" size={size} color={color} />\r\n              ),\r\n            }}\r\n          />\r\n          <Tab.Screen\r\n            name=\"Home\"\r\n            component={HomeScreen}\r\n            options={{\r\n              tabBarLabel: 'Inicio',\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Ionicons name=\"home\" size={size} color={color} />\r\n              ),\r\n            }}\r\n          />\r\n          <Tab.Screen\r\n            name=\"Tortas\"\r\n            component={TortasScreen}\r\n            options={{\r\n              tabBarLabel: 'Tortas',\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Ionicons name=\"cake\" size={size} color={color} />\r\n              ),\r\n            }}\r\n          />\r\n        </Tab.Navigator>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  menu: {\r\n    width: 60,\r\n    backgroundColor: '#86C997',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    transitionProperty: 'width',\r\n    transitionDuration: '0.3s',\r\n    zIndex: 1,\r\n  },\r\n  menuExpanded: {\r\n    width: 120,\r\n  },\r\n  menuItems: {\r\n    marginTop: 10,\r\n  },\r\n  menuItem: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    marginBottom: 10,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default TabNavigator;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}