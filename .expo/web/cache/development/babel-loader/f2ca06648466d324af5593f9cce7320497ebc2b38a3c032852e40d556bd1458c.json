{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport HomeScreen from \"../views/homeScreen\";\nimport IngredientListScreen from \"../views/IngredientListScreen\";\nimport TortasScreen from \"../views/TortasScreen\";\nimport NewIngredientScreen from \"../views/NewIngredientScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nvar IngredientStack = function IngredientStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"IngredientList\",\n      component: IngredientListScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NewIngredient\",\n      component: NewIngredientScreen,\n      options: {\n        title: 'Nuevo Ingrediente'\n      }\n    })]\n  });\n};\nvar TabNavigator = function TabNavigator() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isExpanded = _useState2[0],\n    setExpanded = _useState2[1];\n  var toggleMenu = function toggleMenu() {\n    setExpanded(!isExpanded);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      style: [styles.menu, isExpanded ? styles.menuExpanded : null],\n      onPress: toggleMenu,\n      activeOpacity: 0.7,\n      children: [_jsx(Ionicons, {\n        name: isExpanded ? 'close' : 'menu',\n        size: 30,\n        color: \"black\"\n      }), isExpanded && _jsxs(View, {\n        style: styles.menuItems,\n        children: [_jsx(Text, {\n          style: styles.menuItem,\n          children: \"Overview\"\n        }), _jsx(Text, {\n          style: styles.menuItem,\n          children: \"Summary\"\n        }), _jsx(Text, {\n          style: styles.menuItem,\n          children: \"Tortas\"\n        }), _jsx(Text, {\n          style: styles.menuItem,\n          children: \"Recetas\"\n        }), _jsx(Text, {\n          style: styles.menuItem,\n          children: \"Cuenta\"\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.content,\n      children: _jsxs(Tab.Navigator, {\n        tabBarOptions: {\n          activeTintColor: '#86C997',\n          inactiveTintColor: 'gray',\n          labelStyle: {\n            fontSize: 12,\n            fontWeight: 'bold'\n          },\n          style: {\n            backgroundColor: '#86C997',\n            borderTopWidth: 1,\n            borderTopColor: '#ccc'\n          },\n          showIcon: true,\n          showLabel: true,\n          tabStyle: {\n            flexDirection: 'row'\n          },\n          indicatorStyle: {\n            backgroundColor: '#86C997'\n          }\n        },\n        initialRouteName: \"Home\",\n        children: [_jsx(Tab.Screen, {\n          name: \"IngredientStack\",\n          component: IngredientStack,\n          options: function options(_ref) {\n            var route = _ref.route;\n            return {\n              tabBarLabel: isExpanded && route.name === 'IngredientStack' ? 'Ingredientes' : null,\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var color = _ref2.color,\n                  size = _ref2.size;\n                return _jsx(Ionicons, {\n                  name: \"list\",\n                  size: size,\n                  color: color\n                });\n              }\n            };\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: function options(_ref3) {\n            var route = _ref3.route;\n            return {\n              tabBarLabel: isExpanded && route.name === 'Home' ? 'Inicio' : null,\n              tabBarIcon: function tabBarIcon(_ref4) {\n                var color = _ref4.color,\n                  size = _ref4.size;\n                return _jsx(Ionicons, {\n                  name: \"home\",\n                  size: size,\n                  color: color\n                });\n              }\n            };\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Tortas\",\n          component: TortasScreen,\n          options: function options(_ref5) {\n            var route = _ref5.route;\n            return {\n              tabBarLabel: isExpanded && route.name === 'Tortas' ? 'Tortas' : null,\n              tabBarIcon: function tabBarIcon(_ref6) {\n                var color = _ref6.color,\n                  size = _ref6.size;\n                return _jsx(Ionicons, {\n                  name: \"cake\",\n                  size: size,\n                  color: color\n                });\n              }\n            };\n          }\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  menu: {\n    width: 60,\n    backgroundColor: '#86C997',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transitionProperty: 'width',\n    transitionDuration: '0.3s',\n    zIndex: 1\n  },\n  menuExpanded: {\n    width: 120\n  },\n  menuItems: {\n    marginTop: 10\n  },\n  menuItem: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 10\n  },\n  content: {\n    flex: 1,\n    backgroundColor: 'white'\n  }\n});\nexport default TabNavigator;","map":{"version":3,"names":["React","useState","createBottomTabNavigator","Ionicons","createStackNavigator","View","TouchableOpacity","StyleSheet","Text","HomeScreen","IngredientListScreen","TortasScreen","NewIngredientScreen","jsx","_jsx","jsxs","_jsxs","Tab","Stack","IngredientStack","Navigator","children","Screen","name","component","options","headerShown","title","TabNavigator","_useState","_useState2","_slicedToArray","isExpanded","setExpanded","toggleMenu","style","styles","container","menu","menuExpanded","onPress","activeOpacity","size","color","menuItems","menuItem","content","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","fontSize","fontWeight","backgroundColor","borderTopWidth","borderTopColor","showIcon","showLabel","tabStyle","flexDirection","indicatorStyle","initialRouteName","_ref","route","tabBarLabel","tabBarIcon","_ref2","_ref3","_ref4","_ref5","_ref6","create","flex","width","alignItems","justifyContent","transitionProperty","transitionDuration","zIndex","marginTop","marginBottom"],"sources":["C:/Users/Gian/Desktop/CostoSmart/frontend/src/components/Navigation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { View, TouchableOpacity, StyleSheet, Text } from 'react-native';\r\n\r\nimport HomeScreen from '../views/homeScreen';\r\nimport IngredientListScreen from '../views/IngredientListScreen';\r\nimport TortasScreen from '../views/TortasScreen';\r\nimport NewIngredientScreen from '../views/NewIngredientScreen';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nconst IngredientStack = () => (\r\n  <Stack.Navigator>\r\n    <Stack.Screen\r\n      name=\"IngredientList\"\r\n      component={IngredientListScreen}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <Stack.Screen\r\n      name=\"NewIngredient\"\r\n      component={NewIngredientScreen}\r\n      options={{ title: 'Nuevo Ingrediente' }}\r\n    />\r\n  </Stack.Navigator>\r\n);\r\n\r\nconst TabNavigator = () => {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={[styles.menu, isExpanded ? styles.menuExpanded : null]}\r\n        onPress={toggleMenu}\r\n        activeOpacity={0.7}\r\n      >\r\n        <Ionicons name={isExpanded ? 'close' : 'menu'} size={30} color=\"black\" />\r\n        {isExpanded && (\r\n          <View style={styles.menuItems}>\r\n            <Text style={styles.menuItem}>Overview</Text>\r\n            <Text style={styles.menuItem}>Summary</Text>\r\n            <Text style={styles.menuItem}>Tortas</Text>\r\n            <Text style={styles.menuItem}>Recetas</Text>\r\n            <Text style={styles.menuItem}>Cuenta</Text>\r\n          </View>\r\n        )}\r\n      </TouchableOpacity>\r\n      <View style={styles.content}>\r\n        <Tab.Navigator\r\n          tabBarOptions={{\r\n            activeTintColor: '#86C997',\r\n            inactiveTintColor: 'gray',\r\n            labelStyle: {\r\n              fontSize: 12,\r\n              fontWeight: 'bold',\r\n            },\r\n            style: {\r\n              backgroundColor: '#86C997',\r\n              borderTopWidth: 1,\r\n              borderTopColor: '#ccc',\r\n            },\r\n            showIcon: true,\r\n            showLabel: true,\r\n            tabStyle: {\r\n              flexDirection: 'row',\r\n            },\r\n            indicatorStyle: {\r\n              backgroundColor: '#86C997',\r\n            },\r\n          }}\r\n          initialRouteName=\"Home\"\r\n        >\r\n          <Tab.Screen\r\n            name=\"IngredientStack\"\r\n            component={IngredientStack}\r\n            options={({ route }) => ({\r\n              tabBarLabel: isExpanded && route.name === 'IngredientStack' ? 'Ingredientes' : null,\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Ionicons name=\"list\" size={size} color={color} />\r\n              ),\r\n            })}\r\n          />\r\n          <Tab.Screen\r\n            name=\"Home\"\r\n            component={HomeScreen}\r\n            options={({ route }) => ({\r\n              tabBarLabel: isExpanded && route.name === 'Home' ? 'Inicio' : null,\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Ionicons name=\"home\" size={size} color={color} />\r\n              ),\r\n            })}\r\n          />\r\n          <Tab.Screen\r\n            name=\"Tortas\"\r\n            component={TortasScreen}\r\n            options={({ route }) => ({\r\n              tabBarLabel: isExpanded && route.name === 'Tortas' ? 'Tortas' : null,\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Ionicons name=\"cake\" size={size} color={color} />\r\n              ),\r\n            })}\r\n          />\r\n        </Tab.Navigator>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  menu: {\r\n    width: 60,\r\n    backgroundColor: '#86C997',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    transitionProperty: 'width',\r\n    transitionDuration: '0.3s',\r\n    zIndex: 1,\r\n  },\r\n  menuExpanded: {\r\n    width: 120,\r\n  },\r\n  menuItems: {\r\n    marginTop: 10,\r\n  },\r\n  menuItem: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    marginBottom: 10,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    backgroundColor: 'white', // Agregué un color de fondo para que se muestre el contenido\r\n  },\r\n});\r\n\r\nexport default TabNavigator;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}